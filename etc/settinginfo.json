[
    {
        "name": "conference_abbreviation", "storage": "opt.shortName",
        "title": "Conference abbreviation",
        "type": "simplestring", "size": 20, "autogrow": true,
        "parser_class": "Basics_SettingParser",
        "tags": "id identity"
    },
    {
        "name": "conference_name", "storage": "opt.longName",
        "title": "Conference name", "placeholder": "(same as abbreviation)",
        "type": "simplestring", "size": 70,
        "parser_class": "Basics_SettingParser",
        "tags": "id identity"
    },

    {
        "name": "comment_allow_always", "storage": "cmt_always",
        "title": "Allow comments even if reviewing is closed",
        "type": "checkbox",
        "tags": "comment"
    },
    {
        "name": "comment_author", "storage": "cmt_author",
        "title": "Allow authors to respond to reviewer comments",
        "type": "checkbox", "default_value": 0,
        "parser_class": "Comment_SettingParser",
        "tags": "comment"
    },
    {
        "name": "comment_author_initiate", "storage": "none",
        "title": "Allow authors to initiate comment exchanges",
        "type": "checkbox",
        "parser_class": "Comment_SettingParser",
        "tags": "comment"
    },
    {
        "name": "comment_visibility_reviewer", "storage": "cmt_revid",
        "title": "Comment visibility to reviewers",
        "type": "radio", "values": [0, 1], "default_value": 0,
        "json_values": ["if_reviewers_visible", "yes"],
        "tags": "comment visibility"
    },
    {
        "name": "comment_visibility_anonymous", "storage": "cmt_revid",
        "title": "Anonymous PC discussion",
        "type": "checkbox", "initial_value": 1, "json": "in",
        "tags": "comment visibility"
    },

    {
        "name": "decisions", "hashid": "decision-types", "internal": true
    },
    {
        "name": "outcome_map", "internal": true, "storage": "outcome_map",
        "type": "string",
        "default_value": "{\"1\":\"Accepted\",\"-1\":\"Rejected\"}"
    },

    {
        "name": "decision", "hashid": "decision-types",
        "type": "oblist", "parser_class": "Decision_SettingParser",
        "title": "Decision types",
        "tags": "decision"
    },
    {
        "name_pattern": "decision/$",
        "type": "object", "subtype": "Decision_Setting",
        "parser_class": "Decision_SettingParser"
    },
    {
        "name_pattern": "decision/$/id", "type": "int",
        "internal": true, "json": true, "id_member": true
    },
    {
        "name_pattern": "decision/$/name",
        "title": "Decision name",
        "type": "simplestring", "size": 30, "placeholder": "Decision name",
        "required": true
    },
    {
        "name_pattern": "decision/$/category",
        "title": "Decision category", "type": "radio",
        "values": ["accept", "reject", "desk_reject", "maybe"]
    },

    {
        "name": "final_done",
        "title": "Final version upload hard deadline",
        "type": "date",
        "tags": "final deadline"
    },
    {
        "name": "final_grace",
        "title": "Final version upload grace period",
        "type": "grace",
        "tags": "final"
    },
    {
        "name": "final_open",
        "title": "Collect final versions setting",
        "type": "checkbox",
        "tags": "final deadline"
    },
    {
        "name": "final_soft",
        "title": "Final version upload deadline",
        "type": "date",
        "tags": "final deadline"
    },
    {
        "name": "mailbody_requestreview",
        "title": "Mail template for external review requests",
        "type": "string", "subtype": "mailbody",
        "tags": "review"
    },
    {
        "name": "review_terms", "storage": "msg.clickthrough_review",
        "title": "Clickthrough review terms",
        "type": "htmlstring", "size": 10,
        "parser_class": "Messages_SettingParser",
        "tags": "review"
    },
    {
        "name": "submission_terms", "storage": "msg.clickthrough_submit",
        "title": "Clickthrough submission terms",
        "type": "htmlstring", "size": 10,
        "parser_class": "Messages_SettingParser",
        "tags": "submission"
    },
    {
        "name": "conflict_description", "storage": "msg.conflictdef",
        "title": "Definition of conflict of interest",
        "type": "htmlstring", "size": 5,
        "tags": "conflict"
    },
    {
        "name": "conflict_visibility", "storage": "sub_pcconfvis",
        "title": "PC conflict visibility",
        "type": "radio",
        "values": [0, 1, 2], "default_value": 0,
        "json_values": ["if_authors_visible", "no", "yes"],
        "tags": "conflict visibility"
    },
    {
        "name": "final_edit_message", "storage": "msg.finalsubmit",
        "title": "Final version edit message",
        "type": "htmlstring",
        "tags": "final"
    },
    {
        "name": "home_message", "storage": "msg.home",
        "title": "Home page message",
        "type": "htmlstring",
        "tags": "home"
    },
    {
        "name": "preference_instructions", "storage": "msg.revprefdescription",
        "title": "Review preference instructions",
        "type": "htmlstring", "size": 20, "default_value": "auto",
        "parser_class": "Messages_SettingParser",
        "tags": "revpref"
    },
    {
        "name": "preference_min", "storage": "pref_min",
        "title": "Minimum allowed review preference",
        "type": "int", "default_value": -1000000,
        "parser_class": "Preference_SettingParser",
        "tags": "revpref"
    },
    {
        "name": "preference_max", "storage": "pref_max",
        "title": "Maximum allowed review preference",
        "type": "int", "default_value": 1000000,
        "parser_class": "Preference_SettingParser",
        "tags": "revpref"
    },
    {
        "name": "preference_fuzz", "storage": "pref_fuzz",
        "title": "Preference fuzzing",
        "type": "int", "default_value": 0,
        "parser_class": "Preference_SettingParser",
        "tags": "revpref"
    },
    {
        "name": "preference_fuzz_enable", "storage": "none", "json": false,
        "title": "Preference fuzzing",
        "parser_class": "Preference_SettingParser",
        "type": "checkbox",
        "parse_order": 1
    },
    {
        "name": "preference_fuzz_amount", "storage": "none", "json": false,
        "title": "Preference fuzz factor",
        "parser_class": "Preference_SettingParser",
        "type": "nonnegint", "placeholder": "10", "size": 5, "default_value": 10,
        "parse_order": 2
    },
    {
        "name": "preference_shuffle", "storage": "pref_shuffle",
        "title": "Shuffle submissions on review preferences page",
        "type": "checkbox",
        "tags": "revpref"
    },
    {
        "name": "submission_edit_message", "storage": "msg.submit",
        "title": "Submission edit message",
        "type": "htmlstring", "size": 5,
        "tags": "submission"
    },
    {
        "name": "next_optionid", "internal": true, "type": "nonnegint"
    },
    {
        "name": "review_terms_exist", "internal": true, "storage": "ova.clickthrough_review",
        "type": "checkbox"
    },
    {
        "name": "submission_terms_exist", "internal": true, "storage": "ova.clickthrough_submit",
        "type": "checkbox"
    },
    {
        "name": "conference_url", "storage": "opt.conferenceSite",
        "title": "Conference URL",
        "type": "url", "required": false, "size": 70, "placeholder": "N/A",
        "tags": "id identity"
    },
    {
        "name": "site_contact_email", "storage": "opt.contactEmail",
        "title": "Email of site contact",
        "type": "email", "required": false, "size": 40,
        "parser_class": "SiteContact_SettingParser", "parse_order": 1,
        "tags": "mail id identity"
    },
    {
        "name": "site_contact_name", "storage": "opt.contactName",
        "title": "Name of site contact",
        "type": "simplestring", "size": 50,
        "parser_class": "SiteContact_SettingParser", "placeholder": "(none)",
        "tags": "mail id identity"
    },
    {
        "name": "email_default_cc", "storage": "opt.emailCc",
        "title": "Default Cc for mail tool",
        "type": "emailheader", "size": 80, "placeholder": "(none)",
        "tags": "mail id identity"
    },
    {
        "name": "email_default_reply_to", "storage": "opt.emailReplyTo",
        "title": "Default Reply-To for mail tool",
        "type": "emailheader", "size": 80, "placeholder": "(none)",
        "tags": "mail id identity"
    },
    {
        "name": "options", "storage": "dat.options", "internal": true,
        "type": "string", "hashid": false
    },
    {
        "name": "options_version", "storage": "val.options", "internal": true
    },
    {
        "name": "ioptions", "storage": "ioptions", "internal": true,
        "type": "string", "hashid": false
    },

    {
        "name": "sf",
        "type": "oblist", "parser_class": "Options_SettingParser",
        "title": "Submission form",
        "parse_order": 1,
        "tags": "submission sf"
    },
    {
        "name_pattern": "sf/$",
        "type": "object", "subtype": "Sf_Setting",
        "parser_class": "Options_SettingParser",
        "title": "Submission field", "title_pattern": "‘${sv sf/$/title}’"
    },
    {
        "name_pattern": "sf/$/id", "type": "int",
        "internal": true, "json": true, "id_member": true
    },
    {
        "name_pattern": "sf/$/name", "title": "Submission field name",
        "type": "simplestring",
        "placeholder": "Field name", "size": 50, "parser_class": "Options_SettingParser"
    },
    {
        "name_pattern": "sf/$/title",
        "internal": true, "parser_class": "Options_SettingParser"
    },
    {
        "name_pattern": "sf/$/order",
        "title": "/Order",
        "type": "float"
    },
    {
        "name_pattern": "sf/$/type",
        "title": "/Field type",
        "type": "radio", "values": "auto",
        "parser_class": "Options_SettingParser"
    },
    {
        "name_pattern": "sf/$/description",
        "title": "/Description",
        "type": "htmlstring", "size": 2, "autogrow": true
    },
    {
        "name_pattern": "sf/$/values", "type": "oblist", "storage": "member.xvalues",
        "parser_class": "Options_SettingParser", "parse_order": 3,
        "title": "/Value list",
        "hashid": "sf/$/values_text"
    },
    {   "name_pattern": "sf/$/values_storage", "internal": true, "storage": "member.values"   },
    {   "name_pattern": "sf/$/ids", "internal": true   },
    {
        "name_pattern": "sf/$/values/$$", "type": "object", "subtype": "SfValue_Setting",
        "parser_class": "Options_SettingParser"
    },
    {
        "name_pattern": "sf/$/values/$$/id", "type": "int",
        "internal": true, "json": true, "id_member": true
    },
    {
        "name_pattern": "sf/$/values/$$/name",
        "title": "/Name",
        "type": "simplestring", "required": true, "size": 50,
        "hashid": "sf/$/values_text"
    },
    {
        "name_pattern": "sf/$/values/$$/order",
        "title": "/Order",
        "type": "float",
        "hashid": "sf/$/values_text"
    },
    {
        "name_pattern": "sf/$/values_text", "storage": "none",
        "title": "/Choices",
        "type": "longstring", "size": 3, "autogrow": true,
        "parser_class": "Options_SettingParser", "parse_order": 2,
        "json": false
    },
    {
        "name_pattern": "sf/$/required",
        "title": "/Required",
        "type": "radio", "values": [0, 1, 2],
        "json_values": ["no", "register", "submit"]
    },
    {
        "name_pattern": "sf/$/display",
        "title": "/Display",
        "type": "radio", "values": ["right", "rest", "top", "left", "title", "none"]
    },
    {
        "name_pattern": "sf/$/visibility",
        "title": "/Visibility",
        "type": "radio", "values": ["all", "nonblind", "conflict", "review", "admin"]
    },
    {
        "name_pattern": "sf/$/condition", "storage": "member.exists_if",
        "title": "/Presence condition",
        "type": "string", "subtype": "condition", "size": 30, "placeholder": "Search",
        "parse_order": 3
    },
    {
        "name_pattern": "sf/$/edit_condition", "storage": "member.editable_if",
        "title": "/Edit condition",
        "type": "string", "subtype": "condition", "size": 30, "placeholder": "Search",
        "parse_order": 3
    },
    {   "name_pattern": "sf/$/editcondition", "alias_pattern": "sf/$/edit_condition"   },
    {
        "name_pattern": "sf/$/min",
        "title": "/Minimum value count",
        "type": "nonnegint", "size": 5, "placeholder": "none", "default_value": 0
    },
    {
        "name_pattern": "sf/$/max",
        "title": "/Maximum value count",
        "type": "nonnegint", "size": 5, "placeholder": "none", "default_value": 0
    },
    {
        "name_pattern": "sf/$/wordlimit",
        "title": "/Word limit",
        "type": "nonnegint", "size": 5, "placeholder": "none", "default_value": 0
    },
    {
        "name_pattern": "sf/$/hard_wordlimit",
        "title": "/Hard word limit",
        "type": "nonnegint", "size": 5, "placeholder": "none", "default_value": 0
    },
    {
        "name_pattern": "sf/$/max_submissions",
        "title": "/Maximum submissions per author",
        "type": "nonnegint", "size": 5, "placeholder": "no limit", "default_value": 0
    },
    {
        "name": "sf_abstract", "storage": "ova.noAbstract",
        "title": "Submission abstract required",
        "type": "radio",
        "values": [0, 2, 1, -1], "default_value": 0,
        "json_values": ["required", "optional", "none", "other"],
        "json": "in",
        "tags": "submission sf"
    },
    {
        "name": "sf_pdf_submission", "storage": "ova.noPapers",
        "title": "Submission PDF required",
        "type": "radio",
        "values": [0, 2, 1, -1], "default_value": 0,
        "json_values": ["required", "optional", "none", "other"],
        "json": "in",
        "tags": "submission sf"
    },
    {
        "name": "author_visibility", "storage": "sub_blind",
        "title": "Submission anonymity",
        "type": "radio",
        "values": [0, 1, 2, 3], "default_value": 2,
        "json_values": ["open", "optional", "blind", "blind_until_review"],
        "tags": "submission visibility"
    },
    {
        "name": "accepted_author_visibility", "storage": "negval.seedec_hideau",
        "title": "Show accepted submissions’ author lists to reviewers",
        "type": "checkbox",
        "tags": "final visibility"
    },
    {
        "name": "sf_author_orcid", "storage": "ova.requireOrcid",
        "title": "ORCiD requirement",
        "type": "radio",
        "values": [0, 1, 2], "default_value": 0,
        "json_values": ["no", "yes", "final"],
        "tags": "submission sf"
    },
    {
        "name": "sf_author_max", "storage": "ova.maxAuthors", "type": "nonnegint",
        "title": "Maximum authors per submission",
        "default_value": 0,
        "json": "in",
        "tags": "submission sf"
    },
    {
        "name": "sf_pc_conflicts", "storage": "sub_pcconf",
        "title": "Collect PC conflicts",
        "type": "checkbox", "initial_value": 1,
        "tags": "submission sf conflict"
    },
    {
        "name": "sf_pc_conflict_types", "storage": "sub_pcconfsel",
        "title": "Collect PC conflict types",
        "type": "checkbox",
        "tags": "submission sf conflict"
    },
    {
        "name": "sf_collaborators", "storage": "sub_collab",
        "title": "Collect other conflicts and collaborators",
        "type": "checkbox",
        "tags": "submission sf conflict"
    },


    {
        "name": "submission_rounds", "internal": true, "type": "string"
    },
    {
        "name": "submission",
        "type": "oblist", "parser_class": "Sround_SettingParser",
        "title": "Submission classes and deadlines",
        "tags": "submission",
        "member_tags": "deadline"
    },
    {
        "name_pattern": "submission/$",
        "type": "object", "subtype": "Sround_Setting",
        "title": "Submission class", "title_pattern": "${sv submission/$/title}",
        "parser_class": "Sround_SettingParser"
    },
    {
        "name_pattern": "submission/$/id",
        "internal": true, "json": true, "id_member": true,
        "type": "string"
    },
    {
        "name_pattern": "submission/$/tag",
        "title": "Submission tag",
        "type": "tag", "size": 20, "autogrow": true,
        "placeholder": "(Tag)"
    },
    {
        "name_pattern": "submission/$/title", "internal": true, "parser_class": "Sround_SettingParser"
    },
    {
        "name_pattern": "submission/$/open",
        "title": "/Enable submissions",
        "type": "cdate",
        "tags": "submission deadline"
    },
    {
        "name_pattern": "submission/$/registration", "storage": "member.register",
        "title": "/Registration deadline",
        "type": "date", "placeholder": "none",
        "tags": "submission deadline"
    },
    {
        "name_pattern": "submission/$/done", "storage": "member.submit",
        "title": "/Submission deadline",
        "type": "date", "placeholder": "none",
        "tags": "submission deadline"
    },


    {
        "name": "draft_submission_early_visibility", "storage": "pc_seeall",
        "title": "PC can see incomplete submissions",
        "type": "checkbox",
        "tags": "submission"
    },
    {
        "name": "submitted_document_early_visibility", "storage": "pc_seeallpdf",
        "title": "PC can see all submitted PDFs",
        "type": "checkbox",
        "tags": "submission"
    },
    {
        "name": "pc_warn_bulk_download", "storage": "ova.pcWarnBulkDownload",
        "title": "Warn PC about downloading submissions in bulk",
        "type": "checkbox",
        "tags": "submission"
    },

    {
        "name": "response_active", "storage": "resp_active",
        "title": "Collect authors’ responses",
        "type": "checkbox",
        "tags": "response"
    },

    {
        "name": "responses", "internal": true, "type": "string"
    },

    {
        "name": "response",
        "type": "oblist", "parser_class": "Response_SettingParser",
        "title": "Response rounds and deadlines",
        "tags": "response",
        "member_tags": "deadline"
    },
    {
        "name_pattern": "response/$",
        "type": "object", "subtype": "Response_Setting",
        "parser_class": "Response_SettingParser",
        "title": "Response round", "title_pattern": "${sv response/$/title}"
    },
    {
        "name_pattern": "response/$/id", "type": "int",
        "internal": true, "json": true, "id_member": true
    },
    {
        "name_pattern": "response/$/name",
        "title": "Response name", "placeholder": "Response name",
        "type": "tag", "required": false, "size": 20, "id_member": true,
        "placeholder": "auto",
        "parser_class": "Response_SettingParser"
    },
    {
        "name_pattern": "response/$/title",
        "internal": true, "parser_class": "Response_SettingParser"
    },
    {
        "name_pattern": "response/$/open",
        "title": "/Start time", "type": "date",
        "tags": "response deadline"
    },
    {
        "name_pattern": "response/$/done",
        "title": "/Hard deadline", "type": "date",
        "tags": "response deadline"
    },
    {
        "name_pattern": "response/$/grace",
        "title": "/Grace period", "type": "grace"
    },
    {
        "name_pattern": "response/$/condition",
        "title": "/Condition",
        "type": "string", "subtype": "search", "size": 40, "placeholder": "(All)",
        "default_value": "all", "parser_class": "Response_SettingParser"
    },
    {
        "name_pattern": "response/$/wordlimit",
        "title": "/Word limit",
        "type": "nonnegint", "size": 5, "placeholder": "none", "default_value": 0
    },
    {
        "name_pattern": "response/$/hard_wordlimit",
        "title": "/Hard word limit",
        "type": "nonnegint", "size": 5, "placeholder": "none", "default_value": 0
    },
    {
        "name_pattern": "response/$/instructions",
        "title": "/Instructions",
        "type": "htmlstring", "size": 3, "default_value": "auto",
        "parser_class": "Response_SettingParser"
    },


    {
        "name": "review_open", "storage": "rev_open",
        "title": "Enable reviewing",
        "type": "cdate",
        "tags": "review deadline"
    },
    {
        "name": "review_blind", "storage": "rev_blind",
        "title": "Review anonymity",
        "type": "radio",
        "values": [0, 1, 2], "default_value": 2,
        "json_values": ["open", "optional", "blind"],
        "tags": "review visibility"
    },
    {
        "name": "review_self_assign", "storage": "pcrev_any",
        "title": "PC can review any paper",
        "type": "checkbox", "initial_value": 1,
        "tags": "review"
    },
    {
        "name": "review_visibility_author", "storage": "val.au_seerev",
        "title": "Authors can see reviews",
        "type": "radio",
        "values": [0, 2, 3], "default_value": 0,
        "json_values": ["no", "yes", "condition"],
        "tags": "review visibility"
    },
    {
        "name": "review_visibility_author_condition", "storage": "dat.au_seerev",
        "title": "Review visibility condition",
        "type": "string", "subtype": "search", "size": 30, "placeholder": "Search",
        "parser_class": "ReviewVisibility_SettingParser",
        "tags": "review visibility"
    },
    {
        "name": "review_visibility_author_tags", "storage": "tag_au_seerev",
        "title": "Review visibility tags", "json": "in",
        "type": "taglist", "size": 24,
        "parser_class": "ReviewVisibility_SettingParser"
    },
    {
        "name": "review_visibility_external", "storage": "viewrev_ext",
        "title": "External reviewers can view reviews",
        "type": "radio",
        "values": [-1, 0], "default_value": 0,
        "json_values": ["never", "after_review"],
        "parser_class": "Review_SettingParser",
        "tags": "review visibility"
    },
    {
        "name": "review_visibility_lead", "storage": "negval.lead_noseerev",
        "title": "Lead gets special access to submitted reviews",
        "type": "checkbox",
        "tags": "review visibility"
    },
    {
        "name": "review_visibility_pc", "storage": "viewrev",
        "title": "PC can see all review contents",
        "type": "radio",
        "values": [-1, 0, 1, 3, 4], "default_value": 0,
        "json_values": ["never", "after_review", "always", "assignment_not_incomplete", "all_assignments_complete"],
        "tags": "review visibility"
    },
    {
        "name": "review_identity_visibility_external", "storage": "viewrevid_ext",
        "title": "External reviewers can see reviewer identities",
        "type": "radio",
        "values": [-1, 0, 1], "default_value": 0,
        "json_values": ["never", "after_review", "always"],
        "tags": "review visibility"
    },
    {
        "name": "review_identity_visibility_pc", "storage": "viewrevid",
        "title": "PC can see reviewer identities",
        "type": "radio",
        "values": [-1, 0, 5, 1], "default_value": 0, "initial_value": 1,
        "json_values": ["never", "after_review", "if_assigned", "always"],
        "tags": "review visibility"
    },
    {
        "name": "review_identity_visibility_meta_special", "internal": true,
        "title": "Metareviewer identities are treated specially",
        "type": "checkbox",
        "parser_class": "Review_SettingParser"
    },
    {
        "name": "review_identity_visibility_meta", "storage": "viewmetarevid",
        "title": "PC can see metareviewer identities",
        "type": "radio",
        "values": [-2, -1, 0, 5, 1], "default_value": -2,
        "json_values": ["default", "never", "after_review", "if_assigned", "always"],
        "parser_class": "Review_SettingParser",
        "tags": "review visibility"
    },
    {
        "name": "review_proposal", "storage": "extrev_chairreq",
        "title": "PC proposals for external reviewers",
        "type": "radio",
        "values": [-1, 0, 1, 2], "default_value": 0, "initial_value": 2,
        "json_values": ["no", "yes", "approval_required", "approval_required_potential_conflict"],
        "tags": "review"
    },
    {
        "name": "review_proposal_editable", "storage": "pcrev_editdelegate",
        "title": "PC can edit external reviews they requested",
        "type": "radio", "values": [0, 1, 2, 3], "default_value": 0,
        "json_values": ["no", "yes", "approval_required", "approval_private"],
        "tags": "review"
    },

    {
        "name": "review", "hashid": "rounds",
        "type": "oblist", "parser_class": "Review_SettingParser",
        "title": "Review rounds and deadlines",
        "tags": "review",
        "member_tags": "deadline"
    },
    {
        "name_pattern": "review/$",
        "type": "object", "subtype": "Review_Setting",
        "title": "Review round", "title_pattern": "${sv review/$/title}",
        "parser_class": "Review_SettingParser"
    },
    {
        "name_pattern": "review/$/id", "type": "int",
        "internal": true, "json": true, "id_member": true
    },
    {
        "name_pattern": "review/$/title", "internal": true, "parser_class": "Review_SettingParser"
    },
    {
        "name_pattern": "review/$/name",
        "title": "Review round name",
        "type": "tag", "required": false, "size": 12, "id_member": true,
        "placeholder": "auto",
        "parser_class": "Review_SettingParser"
    },
    {
        "name_pattern": "review/$/soft",
        "title": "/Deadline",
        "type": "date", "placeholder": "none",
        "tags": "review deadline"
    },
    {
        "name_pattern": "review/$/done",
        "title": "/Hard deadline",
        "type": "date", "placeholder": "none",
        "tags": "review deadline"
    },
    {
        "name_pattern": "review/$/external_soft",
        "title": "/External deadline",
        "type": "date", "subtype": "explicit_none", "placeholder": "same as PC",
        "tags": "review deadline"
    },
    {
        "name_pattern": "review/$/external_done",
        "title": "/External hard deadline",
        "type": "date", "subtype": "explicit_none", "placeholder": "same as PC",
        "tags": "review deadline"
    },
    {
        "name": "review_default_round_index", "storage": "none", "json": false,
        "title": "Default round for new reviews",
        "type": "nonnegint", "parser_class": "Review_SettingParser",
        "parse_order": 1
    },
    {
        "name": "review_default_external_round_index", "storage": "none", "json": false,
        "title": "Default round for new external reviews",
        "type": "nonnegint", "parser_class": "Review_SettingParser",
        "parse_order": 1
    },
    {
        "name": "review_default_round", "storage": "rev_roundtag",
        "title": "Default round for new reviews",
        "type": "tag", "required": false, "parser_class": "Review_SettingParser",
        "parse_order": 1,
        "tags": "review"
    },
    {
        "name": "review_default_external_round", "storage": "extrev_roundtag",
        "title": "Default round for new external reviews",
        "type": "tag", "required": false, "parser_class": "Review_SettingParser",
        "parse_order": 1,
        "tags": "review"
    },
    {   "name_pattern": "pcrev_soft_$", "internal": true, "type": "date"   },
    {   "name_pattern": "pcrev_hard_$", "internal": true, "type": "date"   },
    {   "name_pattern": "extrev_soft_$", "internal": true, "type": "date", "subtype": "explicit_none"   },
    {   "name_pattern": "extrev_hard_$", "internal": true, "type": "date", "subtype": "explicit_none"   },
    {   "name": "tag_rounds", "internal": true, "type": "taglist"   },
    {   "name": "rev_roundtag", "internal": true, "type": "tagselect"   },
    {   "name": "extrev_roundtag", "internal": true, "type": "tagselect"   },

    {
        "name": "review_rating", "storage": "rev_ratings",
        "title": "Collect ratings of reviews",
        "type": "radio",
        "values": [0, 1, -1], "default_value": 0,
        "json_values": ["pc", "all", "no"],
        "tags": "review"
    },
    {
        "name": "review_rating_visibility", "storage": "rev_seeratings",
        "title": "Review rating visibility",
        "type": "radio",
        "values": [0, 1, -1], "default_value": 0,
        "json_values": ["limited", "yes", "no"],
        "tags": "review"
    },


    {
        "name": "review_form", "internal": true, "type": "string"
    },

    {
        "name": "rf", "hashid": false,
        "type": "oblist", "parser_class": "ReviewForm_SettingParser",
        "title": "Review form",
        "tags": "review rf"
    },
    {
        "name_pattern": "rf/$",
        "type": "object", "subtype": "Rf_Setting",
        "title_pattern": "‘${sv rf/$/title}’",
        "parser_class": "ReviewForm_SettingParser"
    },
    {
        "name_pattern": "rf/$/id", "type": "string",
        "internal": true, "json": true, "id_member": true
    },
    {
        "name_pattern": "rf/$/name", "title": "Review field name",
        "type": "simplestring", "required": true,
        "placeholder": "Field name", "size": 50, "parser_class": "ReviewForm_SettingParser"
    },
    {
        "name_pattern": "rf/$/title",
        "internal": true, "parser_class": "ReviewForm_SettingParser"
    },
    {
        "name_pattern": "rf/$/order",
        "title": "/Field order",
        "type": "float"
    },
    {
        "name_pattern": "rf/$/type", "title": "/Field type",
        "type": "radio", "values": "auto",
        "parser_class": "ReviewForm_SettingParser"
    },
    {
        "name_pattern": "rf/$/description",
        "title": "/Description",
        "type": "htmlstring", "size": 2, "autogrow": true
    },
    {
        "name_pattern": "rf/$/required",
        "title": "/Required",
        "type": "radio", "values": [0, 1], "parse_order": 2
    },
    {
        "name_pattern": "rf/$/visibility",
        "title": "/Visibility",
        "type": "radio", "values": ["au", "re", "audec", "pconly", "admin"]
    },
    {
        "name_pattern": "rf/$/presence",
        "title": "/Presence",
        "type": "radio", "values": "auto",
        "parser_class": "ReviewFieldCondition_SettingParser", "parse_order": 1, "json": false
    },
    {
        "name_pattern": "rf/$/condition", "storage": "member.exists_if",
        "title": "/Presence condition",
        "type": "string", "subtype": "condition", "size": 30, "placeholder": "Search",
        "parser_class": "ReviewFieldCondition_SettingParser", "parse_order": 2
    },
    {   "name_pattern": "rf/$/exists_if", "alias_pattern": "rf/$/condition"   },
    {   "name_pattern": "rf/$/display_space", "internal": true   },
    {
        "name_pattern": "rf/$/values", "type": "oblist", "storage": "member.xvalues",
        "title": "/Value list",
        "parser_class": "ReviewForm_SettingParser", "parse_order": 2,
        "hashid": "rf/$/values_text"
    },
    {   "name_pattern": "rf/$/ids", "internal": true   },
    {   "name_pattern": "rf/$/values_storage", "internal": true, "storage": "member.values"   },
    {
        "name_pattern": "rf/$/values/$$", "type": "object", "subtype": "RfValue_Setting",
        "parser_class": "ReviewForm_SettingParser",
        "title": "/Value",
        "title_pattern": "${sv rf/$/values/$$/title}",
        "hashid": "rf/$/values_text"
    },
    {   "name_pattern": "rf/$/values/$$/title", "internal": true, "parser_class": "ReviewForm_SettingParser"   },
    {
        "name_pattern": "rf/$/values/$$/id", "type": "int",
        "internal": true, "json": true, "id_member": true
    },
    {
        "name_pattern": "rf/$/values/$$/symbol",
        "title": "/Symbol",
        "type": "string", "subtype": "allow_int", "required": true, "size": 3,
        "hashid": "rf/$/values_text"
    },
    {
        "name_pattern": "rf/$/values/$$/name",
        "title": "/Description",
        "type": "simplestring", "required": true, "size": 50,
        "hashid": "rf/$/values_text"
    },
    {
        "name_pattern": "rf/$/values/$$/order",
        "title": "/Order",
        "type": "float",
        "hashid": "rf/$/values_text"
    },
    {
        "name_pattern": "rf/$/values_text",
        "title": "/Choices",
        "type": "longstring", "size": 3, "autogrow": true,
        "parser_class": "ReviewForm_SettingParser", "parse_order": 1,
        "json": false
    },
    {
        "name_pattern": "rf/$/start", "internal": true
    },
    {
        "name_pattern": "rf/$/scheme",
        "title": "/Color scheme",
        "type": "radio", "values": ["sv", "svr", "bupu", "pubu", "rdpk", "pkrd", "viridisr", "viridis", "orbu", "buor", "turbo", "turbor", "observablex", "catx", "none"]
    },


    {
        "name": "decision_visibility_author", "storage": "val.au_seedec",
        "title": "Decision visibility to authors",
        "type": "radio",
        "values": [0, 2, 1], "default_value": 0,
        "json_values": ["no", "yes", "condition"],
        "tags": "decision visibility"
    },
    {
        "name": "decision_visibility_author_condition", "storage": "dat.au_seedec",
        "title": "Decision visibility condition",
        "type": "string", "subtype": "search", "size": 30, "placeholder": "Search",
        "parser_class": "DecisionVisibility_SettingParser",
        "tags": "decision visibility"
    },
    {
        "name": "decision_visibility_reviewer", "storage": "seedec",
        "title": "Decision visibility for reviewers",
        "type": "radio",
        "values": [0, 3, 1], "default_value": 0,
        "json_values": ["no", "unconflicted", "yes"],
        "tags": "decision visibility"
    },
    {
        "name": "decision_visibility", "storage": "none",
        "title": "Decision visibility",
        "type": "radio",
        "values": [0, 3, 1, 2], "default_value": 0,
        "json_values": ["admin", "unconflicted_pc", "pc", "au"],
        "parser_class": "DecisionVisibility_SettingParser",
        "json": "in"
    },
    {
        "name": "shepherd_visibility", "storage": "negval.shepherd_hide",
        "title": "Shepherd visibility",
        "type": "checkbox",
        "tags": "decision visibility"
    },
    {
        "name_pattern": "fmtstore_v_$", "internal": true, "storage": "val.sub_banal_$"
    },
    {
        "name_pattern": "fmtstore_s_$", "internal": true, "storage": "dat.sub_banal_$"
    },
    {
        "name_pattern": "fmtstore_o_$", "internal": true, "storage": "opt.sub_banal_$"
    },
    {
        "name": "format", "type": "oblist", "parser_class": "Banal_SettingParser",
        "title": "Format checker settings",
        "tags": "submission sf"
    },
    {
        "name_pattern": "format/$",
        "type": "object", "subtype": "Banal_Setting",
        "parser_class": "Banal_SettingParser"
    },
    {
        "name_pattern": "format/$/id", "type": "int"
    },
    {
        "name_pattern": "format/$/active",
        "title": "Format checker",
        "type": "checkbox"
    },
    {
        "name_pattern": "format/$/bodyfontsize",
        "title": "PDF format checker minimum body font size",
        "type": "string", "size": 5, "placeholder": "any"
    },
    {
        "name_pattern": "format/$/bodylineheight",
        "title": "PDF format checker minimum body line height",
        "type": "string", "size": 5, "placeholder": "any"
    },
    {
        "name_pattern": "format/$/columns",
        "title": "PDF format checker column count",
        "type": "string", "size": 5, "placeholder": "any"
    },
    {
        "name_pattern": "format/$/pagelimit",
        "title": "PDF format checker page limit",
        "type": "string", "size": 5, "placeholder": "any"
    },
    {
        "name_pattern": "format/$/papersize",
        "title": "PDF format checker paper size",
        "type": "string", "size": 18, "placeholder": "any"
    },
    {
        "name_pattern": "format/$/textblock",
        "title": "PDF format checker text block size",
        "type": "string", "size": 18, "placeholder": "any"
    },
    {
        "name_pattern": "format/$/unlimitedref",
        "title": "PDF format checker unlimited references",
        "type": "checkbox"
    },
    {
        "name_pattern": "format/$/wordlimit",
        "title": "PDF format checker word limit",
        "type": "string", "size": 8, "placeholder": "any"
    },

    {
        "name": "submission_freeze", "storage": "sub_freeze",
        "title": "Submitters can update until the deadline",
        "type": "radio",
        "values": [0, 1], "default_value": 0,
        "tags": "submission"
    },
    {
        "name": "submission_grace", "storage": "sub_grace",
        "title": "Submission grace period",
        "type": "grace",
        "tags": "submission"
    },
    {
        "name": "submission_open", "storage": "sub_open",
        "title": "Enable submissions",
        "type": "cdate",
        "tags": "submission deadline"
    },
    {
        "name": "submission_registration", "storage": "sub_reg",
        "title": "Submission registration deadline",
        "type": "date", "parse_order": 0,
        "tags": "submission deadline"
    },
    {
        "name": "submission_done", "storage": "sub_sub",
        "title": "Submission deadline",
        "type": "date", "parse_order": 1,
        "parser_class": "Submissions_SettingParser",
        "tags": "submission deadline"
    },
    {
        "name": "submission_update", "storage": "sub_update",
        "internal": true,
        "type": "date"
    },

    {
        "name": "tag_readonly", "storage": "tag_chair",
        "title": "Read-only tags",
        "type": "taglist", "subtype": "allow_wildcard", "size": 50, "autogrow": true,
        "parser_class": "Tags_SettingParser", "initial_value": "accept pcpaper reject",
        "tags": "tags"
    },
    {
        "name": "tag_hidden",
        "title": "Hidden tags",
        "type": "taglist", "subtype": "allow_wildcard", "size": 50, "autogrow": true,
        "parser_class": "Tags_SettingParser",
        "tags": "tags"
    },

    {   "name": "tag_color", "internal": true, "type": "string"   },
    {
        "name": "tag_style", "hashid": "colors-and-styles",
        "title": "Tag colors and styles",
        "type": "oblist", "parser_class": "TagStyle_SettingParser",
        "tags": "tags"
    },
    {
        "name_pattern": "tag_style/$",
        "type": "object", "subtype": "TagStyle_Setting",
        "title": "Tag style", "title_pattern": "‘${sv tag_style/$/style}’",
        "parser_class": "TagStyle_SettingParser"
    },
    {   "name_pattern": "tag_style/$/id", "internal": true   },
    {
        "name_pattern": "tag_style/$/style",
        "title": "/Style", "type": "simplestring", "required": true,
        "parser_class": "TagStyle_SettingParser", "id_member": true
    },
    {
        "name_pattern": "tag_style/$/tags",
        "title": "/Tag list",
        "type": "taglist", "subtype": "allow_wildcard_chair", "size": 40, "autogrow": true
    },

    {   "name": "tag_badge", "internal": true, "type": "string"   },
    {
        "name": "badge", "hashid": "badges", "title": "Badge tags",
        "type": "oblist", "parser_class": "TagStyle_SettingParser"
    },
    {
        "name_pattern": "badge/$", "internal": true,
        "type": "object", "subtype": "TagStyle_Setting",
        "title": "Badge style", "title_pattern": "‘${sv badge/$/style}’",
        "parser_class": "TagStyle_SettingParser",
        "tags": "tags"
    },
    {   "name_pattern": "badge/$/id", "internal": true   },
    {
        "name_pattern": "badge/$/style",
        "title": "/Style", "type": "simplestring", "required": true,
        "parser_class": "TagStyle_SettingParser", "id_member": true
    },
    {
        "name_pattern": "badge/$/tags",
        "title": "/Tag list",
        "type": "taglist", "subtype": "allow_wildcard_chair", "size": 40, "autogrow": true
    },

    {
        "name": "tag_rank",
        "title": "Ranking tags",
        "type": "taglist", "parser_class": "Tags_SettingParser", "size": 50, "autogrow": true,
        "tags": "tags"
    },
    {
        "name": "tag_visibility_conflict", "storage": "tag_seeall",
        "title": "PC can see tags for conflicted papers",
        "type": "checkbox",
        "tags": "tags visibility"
    },
    {
        "name": "tag_sitewide", "title": "Site-wide tags",
        "type": "taglist", "subtype": "allow_wildcard", "size": 50, "autogrow": true,
        "parser_class": "Tags_SettingParser",
        "tags": "tags"
    },
    {
        "name": "tag_vote_allotment", "storage": "tag_vote",
        "title": "Allotment voting tags",
        "type": "taglist", "subtype": "allotment", "size": 50, "autogrow": true,
        "parser_class": "Tags_SettingParser",
        "tags": "tags"
    },
    {
        "name": "tag_vote_approval", "storage": "tag_approval",
        "title": "Approval voting tags",
        "type": "taglist", "size": 50, "autogrow": true,
        "parser_class": "Tags_SettingParser",
        "tags": "tags"
    },
    {   "name": "tag_autosearch", "internal": true, "type": "string"   },
    {
        "name": "automatic_tag",
        "type": "oblist", "parser_class": "AutomaticTag_SettingParser",
        "title": "Automatic tags", "priority": -1,
        "tags": "tags"
    },
    {
        "name_pattern": "automatic_tag/$", "internal": true,
        "type": "object", "subtype": "AutomaticTag_Setting",
        "title_pattern": "Automatic tag ‘#${sv automatic_tag/$/tag}’",
        "parser_class": "AutomaticTag_SettingParser"
    },
    {   "name_pattern": "automatic_tag/$/id", "internal": true   },
    {
        "name_pattern": "automatic_tag/$/tag", "storage": "member.tag",
        "title": "Automatic tag name",
        "type": "tag", "size": 28, "placeholder": "Tag", "id_member": true
    },
    {
        "name_pattern": "automatic_tag/$/search", "storage": "member.q",
        "title": "/Search",
        "type": "string", "subtype": "search", "size": 50, "placeholder": "Search", "autogrow": true,
        "parser_class": "AutomaticTag_SettingParser"
    },
    {
        "name_pattern": "automatic_tag/$/value", "storage": "member.v",
        "title": "/Value formula",
        "type": "string", "subtype": "formula", "size": 10, "placeholder": "none", "autogrow": true,
        "parser_class": "AutomaticTag_SettingParser"
    },


    {   "name": "has_topics", "internal": true, "type": "checkbox"   },
    {
        "name": "topic", "title": "Topics",
        "type": "oblist", "subtype": "allow_bare_name",
        "parser_class": "Topic_SettingParser",
        "tags": "submission sf"
    },
    {
        "name_pattern": "topic/$",
        "type": "object", "subtype": "Topic_Setting",
        "parser_class": "Topic_SettingParser"
    },
    {
        "name_pattern": "topic/$/id", "type": "nonnegint",
        "internal": true, "json": true, "id_member": true
    },
    {
        "name_pattern": "topic/$/name", "title": "Topic name",
        "type": "simplestring", "size": 80, "autogrow": true
    },
    {
        "name": "new_topics", "title": "New topics",
        "type": "longstring", "parse_order": -1, "parser_class": "Topic_SettingParser",
        "json": false
    },
    {
        "name": "topic_max", "storage": "topic_max", "type": "nonnegint",
        "title": "Maximum topics per submission",
        "default_value": 0,
        "json": "in",
        "tags": "submission sf"
    },
    {
        "name": "topic_min", "storage": "topic_min", "type": "nonnegint",
        "title": "Minimum topics per submission",
        "default_value": 0,
        "json": "in",
        "tags": "submission sf"
    },

    {
        "name": "tracks", "internal": true, "type": "string"
    },

    {
        "name": "track", "hashid": "tracks", "type": "oblist",
        "parser_class": "Track_SettingParser",
        "title": "Tracks",
        "tags": "tracks"
    },
    {
        "name_pattern": "track/$",
        "type": "object", "subtype": "Track_Setting",
        "title_pattern": "${sv track/$/title}",
        "parser_class": "Track_SettingParser"
    },
    {   "name_pattern": "track/$/id", "internal": true, "type": "string"   },
    {
        "name_pattern": "track/$/tag",
        "title": "Track tag",
        "type": "tag", "subtype": "allow_reserved_chair", "size": 20, "autogrow": true,
        "id_member": true
    },
    {   "name_pattern": "track/$/title", "internal": true, "parser_class": "Track_SettingParser"   },
    {
        "name_pattern": "track/$/perm", "storage": "none",
        "type": "object",
        "title": "/Track permissions",
        "parser_class": "Track_SettingParser"
    },
    {
        "name_pattern": "track/$/perm/$$", "storage": "none",
        "title_pattern": "${sv track/$/title} ${sv track/$/perm/$$/title} permission",
        "type": "string", "default_value": "auto",
        "parser_class": "Track_SettingParser"
    },
    {
        "name_pattern": "track/$/perm/$$/type",
        "title_pattern": "${sv track/$/title} ${sv track/$/perm/$$/title} permission",
        "type": "radio", "values": ["all", "+", "-", "none"], "default_value": "auto",
        "parser_class": "Track_SettingParser"
    },
    {
        "name_pattern": "track/$/perm/$$/tag",
        "title_pattern": "${sv track/$/title} ${sv track/$/perm/$$/title} permission",
        "type": "tag", "subtype": "allow_chair",
        "parser_class": "Track_SettingParser"
    },
    {
        "name_pattern": "track/$/perm/$$/title",
        "internal": true, "parser_class": "Track_SettingParser"
    },

    {
        "name": "json_settings", "storage": "none", "json": false,
        "parser_class": "JSON_SettingParser",
        "parse_order": -1000000
    },

    {   "name": "named_searches", "internal": true, "type": "string"   },
    {
        "name": "named_search", "type": "oblist",
        "parser_class": "NamedSearch_SettingParser",
        "tags": "search"
    },
    {
        "name_pattern": "named_search/$",
        "type": "object", "subtype": "NamedSearch_Setting",
        "title_pattern": "${sv named_search/$/title}",
        "parser_class": "NamedSearch_SettingParser"
    },
    {
        "name_pattern": "named_search/$/id",
        "internal": true, "json": true, "id_member": true,
        "type": "string"
    },
    {
        "name_pattern": "named_search/$/name",
        "title": "Search name",
        "type": "string", "subtype": "simple", "size": 30, "autogrow": true
    },
    {   "name_pattern": "named_search/$/title", "internal": true, "parser_class": "NamedSearch_SettingParser"   },
    {
        "name_pattern": "named_search/$/search",
        "title": "/Search",
        "type": "string", "subtype": "search", "storage": "member.q"
    },
    {   "name_pattern": "named_search/$/q", "alias_pattern": "named_search/$/search"   },
    {
        "name_pattern": "named_search/$/description",
        "title": "Search description",
        "type": "string", "subtype": "simple", "size": 50, "autogrow": true
    },
    {
        "name_pattern": "named_search/$/display",
        "title": "/Display",
        "type": "radio", "values": ["default", "none", "highlight"], "default_value": "default"
    },

    {
        "name": "autoassign_review_max_load_tag",
        "title": "Autoassignment maximum PC review load tag",
        "type": "tag", "subtype": "allow_chair", "required": false,
        "tags": "assign"
    },
    {
        "name": "autoassign_review_preference_gadget",
        "title": "Review autoassignment method",
        "type": "radio", "values": ["default", "expertise"], "default_value": "default",
        "storage": "opt.autoassignReviewGadget",
        "tags": "assign"
    },

    {   "name": "extrev_hard_0", "merge": true, "storage": "extrev_hard"   },
    {   "name": "extrev_soft_0", "merge": true, "storage": "extrev_soft"   },
    {   "name": "pcrev_hard_0", "merge": true, "storage": "pcrev_hard"   },
    {   "name": "pcrev_soft_0", "merge": true, "storage": "pcrev_soft"   },
    {   "name": "fmtstore_v_0", "merge": true, "storage": "val.sub_banal"   },
    {   "name": "fmtstore_s_0", "merge": true, "storage": "dat.sub_banal"   },
    {   "name": "fmtstore_o_0", "merge": true, "storage": "opt.sub_banal"   },

    {   "name": "paperacc", "internal": true   },
    {   "name": "paperlead", "internal": true   },
    {   "name": "tracker", "internal": true   },
    {   "name": "allowPaperOption", "internal": true   },
    {   "name": "pcrev_assigntime", "internal": true   },
    {   "name": "pcrev_informtime", "internal": true   },
    {   "name": "has_colontag", "internal": true   },
    {   "name": "no_papersub", "internal": true   },
    {   "name": "cmt_author", "internal": true, "default_value": 0   }
]
