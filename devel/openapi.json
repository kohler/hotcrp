{
    "openapi": "3.1.0",
    "info": {
        "title": "HotCRP REST API",
        "version": "2025-10-04:c6312c294",
        "summary": "HotCRP conference management software API",
        "description": "[HotCRP](https://github.com/kohler/hotcrp) is conference review software. It\nis open source; a supported version runs on [hotcrp.com](https://hotcrp.com/).\nThis documentation is for the HotCRP REST API.\n\nTo request documentation for an API method, please open a [GitHub\nissue](https://github.com/kohler/hotcrp/issues). We also welcome [pull\nrequests](https://github.com/kohler/hotcrp/pulls).\n\n\n## Overview\n\nAPI calls use paths under `api`. For instance, to call the `paper` endpoint on\na server at `https://example.hotcrp.org/funconf25`, you might use a URL like\n`https://example.hotcrp.org/funconf25/api/paper?p=1`.\n\nProvide parameters in query strings or the request body, typically using [form\nencoding](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST). Some\nrequests use groups of parameters to define logical objects using structured\nkeys, such as `named_search/1/q`; other parameters define objects using JSON\nformat. Use `multipart/form-data` encoding for requests that include uploaded\nfiles. Since servers limit upload size, you may need to use the upload API to\nupload a large file before processing it with another call.\n\nResponses are formatted as JSON. Every response has an `ok` property, which is\n`true` if the request format succeeded and `false` otherwise. Typically `\"ok\":\nfalse` indicates a serious error with the request that prevented proper\nprocessing. Messages about the request, if any, are expressed in a\n`message_list` property.\n\n`GET` operations retrieve system state and `POST` operations modify system\nstate. Other operations are occasionally used when semantically meaningful—for\nexample, the `/paper` endpoint supports `DELETE`.\n\n\n### Common parameters\n\nThe `p` parameter defines a submission ID. It can appear either in the query\nstring or immediately following `api/` in the query path: `api/comment?p=1`\nand `api/1/comment` are the same API call. `p` is a positive decimal integer,\nbut some API calls accept `p=new` when defining a new submission.\n\nThe `forceShow` boolean parameter allows administrators to override their\nconflicts when that is possible.\n\n\n### Authentication\n\nExternal applications should authenticate to HotCRP’s API using bearer tokens\n(an `Authorization: bearer` HTTP header). Obtain API tokens using Account\nsettings > Developer. HotCRP Javascript makes API calls using session cookies\nfor authentication.\n\n\n### Large queries\n\nA `POST` request whose `:method:` query parameter is set to `GET` is treated as\nif it were a `GET` request. This can help work around web server URL length\nlimits.\n"
    },
    "servers": [
        {
            "url": "https://{site}.hotcrp.com/api",
            "description": "HotCRP.com site server",
            "variables": {
                "site": {
                    "default": "demo"
                }
            }
        }
    ],
    "paths": {
        "/paper": {
            "get": {
                "summary": "Fetch submission",
                "description": "Fetch a submission object specified by `p`, a submission ID. The submission\nobject is returned in the `paper` response property. Error messages—for\ninstance, about permission errors or nonexistent submissions—are returned in\n`message_list`.\n",
                "tags": [
                    "Submissions"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    },
                    {
                        "name": "forceShow",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "False to not override administrator conflict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "paper": {
                                            "$ref": "#/components/schemas/paper"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create or modify submission",
                "description": "Create or modify a submission specified by `p`, a submission ID.\n\nSetting `p=new` will create a new submission; the response will contain the\nchosen submission ID.\n\nThe modification may be specified:\n\n1. As a JSON request body (when the request body has content-type\n   `application/json`).\n2. As a ZIP archive (when the request body has content-type\n   `application/zip`). The archive must contain a file named `data.json`; it\n   may contain other files too.\n3. As a JSON-formatted request parameter named `json` (when the request body\n   has content-type `application/x-www-form-urlencoded` or\n   `multipart/form-data`).\n4. As a previously-uploaded JSON or ZIP file, represented by a upload token in\n   the `upload` parameter.\n\nIn all of these, the modification is defined by a JSON submission object. The\nproperties of this object define the modifications applied to the submission.\nThe object need not specify all submission properties; absent properties\nremain unchanged.\n\nThe `p` request parameter is optional. If it is unset, HotCRP uses the `pid`\nfrom the supplied JSON. If both the `p` parameter and the JSON `pid` property\nare present, then they must match.\n\nTo test a modification, supply a `dry_run=1` parameter. This will test the\nuploaded JSON but make no changes to the database.\n\n\n### ZIP and form uploads\n\nA ZIP upload should contain a file named `data.json` (`PREFIX-data.json` is\nalso acceptable). This file’s content is parsed as JSON. Submission fields in\nthe JSON can refer to other files in the ZIP. For instance, this shell session\nuploads a new submission with content `paper.pdf`:\n\n```\n$ cat data.json\n{\n\t\"object\": \"paper\",\n\t\"pid\": \"new\",\n\t\"title\": \"Aught: A Methodology for the Visualization of Scheme\",\n\t\"authors\": [{\"name\": \"Nevaeh Gomez\", \"email\": \"ngomez@example.edu\"}],\n\t\"submission\": {\"content_file\": \"paper.pdf\"},\n\t\"status\": \"submitted\"\n}\n$ zip upload.zip data.json paper.pdf\n$ curl -H \"Authorization: bearer hct_XXX\" --data-binary @upload.zip -H \"Content-Type: application/zip\" SITEURL/api/paper\n```\n\nThis shell session does the same, but using `multipart/form-data`.\n\n```\n$ curl -H \"Authorization: bearer hct_XXX\" -F \"json=<data.json\" -F paper.pdf=@paper.pdf SITEURL/api/paper\n```\n\n### Responses\n\nThe `valid` response property is `true` if and only if the modification was\nvalid. In non-dry-run requests, `\"valid\": true` indicates that database changes\nwere committed.\n\nThe `change_list` response property lists any modified field names. New\nsubmissions have `\"pid\"` as the first item in the list. `change_list` contains\nfields that the request *attempted* to modify; successful requests, erroneous\nrequests, and dry-run requests can all return nonempty `change_list`s.\n\nThe response returns the modified submission object `paper` property contains\nthe modified submission object.\n\nDry-run requests return `change_list` and `valid` properties, but not `paper`\nproperties, since no modifications are performed.\n\n\n### Administrator use\n\nAdministrators can use this endpoint to set some submission properties, such\nas `decision`, that have other endpoints as well.\n\nAdministrators can choose specific IDs for new submissions by setting `p` (or\nJSON `pid`) to the chosen ID. Such a request will either modify an existing\nsubmission or create a new submission with that ID. To avoid overwriting an\nexisting submission, set the submission JSON’s `status`.`if_unmodified_since`\nto `0`.\n",
                "tags": [
                    "Submissions"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    },
                    {
                        "name": "dry_run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True checks input for errors, but does not save changes"
                    },
                    {
                        "name": "disable_users",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True disables any newly-created users (site\n  administrators only)"
                    },
                    {
                        "name": "add_topics",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True automatically adds topics from input papers\n  (site administrators only)"
                    },
                    {
                        "name": "notify",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "False disables all email notifications (site\n  administrators only)"
                    },
                    {
                        "name": "notify_authors",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "False disables email notifications to authors\n  (paper administrators only)"
                    },
                    {
                        "name": "reason",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optional text included in notification emails"
                    },
                    {
                        "name": "json",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "upload",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/upload_token"
                        },
                        "description": "Upload token for large input file"
                    },
                    {
                        "$ref": "#/components/parameters/forceShow"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "dry_run": {
                                            "type": "boolean",
                                            "description": "True for `dry_run` requests"
                                        },
                                        "change_list": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "List of changed fields"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "description": "True if the modification was valid"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "description": "ID of modified submission"
                                        },
                                        "paper": {
                                            "$ref": "#/components/schemas/paper",
                                            "description": "JSON of modified submission"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/paper": {
            "delete": {
                "summary": "Delete submission",
                "description": "Delete the submission specified by `p`, a submission ID.\n",
                "tags": [
                    "Submissions"
                ],
                "x-badges": [
                    {
                        "name": "Admin only"
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "name": "dry_run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True checks input for errors, but does not save changes"
                    },
                    {
                        "name": "notify",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "False disables all email notifications (site\n  administrators only)"
                    },
                    {
                        "name": "notify_authors",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "False disables email notifications to authors\n  (paper administrators only)"
                    },
                    {
                        "name": "reason",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optional text included in notification emails"
                    },
                    {
                        "name": "if_unmodified_since",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Don’t delete if modified since this time"
                    },
                    {
                        "$ref": "#/components/parameters/forceShow"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "valid",
                                        "change_list"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "dry_run": {
                                            "type": "boolean",
                                            "description": "True for `dry_run` requests"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "description": "True if the delete request was valid"
                                        },
                                        "change_list": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "`[\"delete\"]`"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/papers": {
            "get": {
                "summary": "Fetch multiple submissions",
                "description": "Fetch submission objects matching a search.\n\nThe search is specified in the `q` parameter (and other search parameters,\nsuch as `t` and `qt`). All matching visible submissions are returned, as an\narray of submission objects, in the response property `papers`.\n\nSince searches silently filter out non-viewable submissions, `/papers?q=1010`\nand `/paper?p=1010` can return different error messages. The `/paper` request\nmight return an error like “Submission #1010 does not exist” or “You aren’t\nallowed to view submission #1010”, whereas the `/papers` request will return\nno errors. To obtain warnings for missing submissions that were explicitly\nlisted in a query, supply a `warn_missing=1` parameter.\n",
                "tags": [
                    "Submissions"
                ],
                "parameters": [
                    {
                        "name": "warn_missing",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Get warnings for missing submissions"
                    },
                    {
                        "$ref": "#/components/parameters/q"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/qt"
                    },
                    {
                        "$ref": "#/components/parameters/scoresort"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    },
                    {
                        "$ref": "#/components/parameters/reviewer"
                    },
                    {
                        "$ref": "#/components/parameters/forceShow"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "papers": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/paper"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create or modify multiple submissions",
                "description": "Create or modify multiple submissions.\n\nThis administrator-only endpoint modifies multiple submissions at once. Its\nrequest formats are similar to that of `POST /{p}/paper`: it can accept a\nJSON, ZIP, or form-encoded request body with a `json` parameter, and ZIP and\nform-encoded requests can also include attached files.\n\n### Modify submissions independently\n\nThe JSON provided for `/papers` should be an *array* of JSON objects. The\n`status_list` response property is an array with the same number of elements\nas the input JSON. Component *i* of `status_list` reports the status of update\n*i* as an object with `valid`, `change_list`, and `pid` properties; these\nreport the validity of the update, the list of changed fields, and the\nsubmission ID of the modified submission.\n\nThe response `message_list` contains messages relating to all modified\nsubmissions. To filter out the messages for a single submission, use the\nmessages’ `landmark` properties. `landmark` is set to the integer index of the\nrelevant submission in the input JSON.\n\n### Modify all matching submissions\n\nAlternately, you can provide a `q` search query parameter and a *single* JSON\nmodification object lacking the `pid` property. The JSON modification will be\napplied to all papers returned by the `q` search query.\n\n",
                "tags": [
                    "Submissions"
                ],
                "x-badges": [
                    {
                        "name": "Admin only"
                    }
                ],
                "parameters": [
                    {
                        "name": "dry_run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True checks input for errors, but does not save changes"
                    },
                    {
                        "name": "disable_users",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True disables any newly-created users (administrators only)"
                    },
                    {
                        "name": "add_topics",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True automatically adds topics from input papers (administrators only)"
                    },
                    {
                        "name": "notify",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "False does not notify contacts of changes (administrators only)"
                    },
                    {
                        "name": "json",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "upload",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/upload_token"
                        },
                        "description": "Defines upload token for large input file"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/search_string"
                        },
                        "description": "Search query for match requests"
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/search_collection"
                        },
                        "description": "Collection to search; defaults to `viewable`"
                    },
                    {
                        "$ref": "#/components/parameters/qt"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    },
                    {
                        "$ref": "#/components/parameters/scoresort"
                    },
                    {
                        "$ref": "#/components/parameters/reviewer"
                    },
                    {
                        "name": "notify_authors",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "reason",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "$ref": "#/components/parameters/forceShow"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "papers": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/paper"
                                            },
                                            "description": "List of JSON versions of modified papers"
                                        },
                                        "dry_run": {
                                            "type": "boolean",
                                            "description": "True for `dry_run` requests"
                                        },
                                        "status_list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/update_status"
                                            },
                                            "description": "List of lists of changed fields"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/formatcheck": {
            "get": {
                "summary": "Check PDF format",
                "tags": [
                    "Documents"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    },
                    {
                        "name": "doc",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/document_name"
                        }
                    },
                    {
                        "name": "dt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/document_type"
                        }
                    },
                    {
                        "name": "docid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/document_id"
                        }
                    },
                    {
                        "name": "soft",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "npages",
                                        "nwords",
                                        "problem_fields",
                                        "has_error",
                                        "docid"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "npages": {},
                                        "nwords": {},
                                        "problem_fields": {},
                                        "has_error": {},
                                        "docid": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "summary": "Upload file",
                "description": "Upload large files to HotCRP for later use.\n\nServers limit how much data they will accept in a single request. The upload\nAPI uploads larger files over multiple requests. When an upload is complete,\nlater requests can refer to that file using an *upload token*.\n\nThe lifecycle of an upload is as follows.\n\n1. A request with `start=1` begins a new upload. This request should also\n   include a `size` parameter to define the size of the uploaded file, if that\n   is known.\n2. The response to this request will include the upload token for the uploaded\n   file in its `token` field. This is a string like `hcupwhvGDVmHNYyDKdqeqA`.\n   All subsequent requests relating to the upload must include this token as a\n   `token` parameter.\n3. Subsequent requests upload the contents of the file in chunks. The `blob`\n   parameter (which can be an attached file) contains the chunk itself; the\n   `offset` parameter defines the offset of chunk relative to the file.\n4. A request with `finish=1` completes the upload. The server seals the upload\n   and responds with the file’s content hash. A `finish=1` request will fail\n   unless all expected chunks have been received.\n\n`start=1` and `finish=1` requests can also include a chunk. The `ranges`\nresponse field represents the ranges of bytes received so far.\n\nThe upload API is only available on sites that have enabled the document\nstore.\n",
                "tags": [
                    "Documents"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "finish",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "cancel",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/upload_token"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "description": "Offset of `blob` in uploaded file"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "description": "Length of `blob` in bytes (must match\n  actual length of `blob`)"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "description": "Size of uploaded file in bytes"
                    },
                    {
                        "name": "dt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/document_type"
                        },
                        "description": "(start only) Purpose of uploaded document;\n  typically corresponds to a submission field ID"
                    },
                    {
                        "name": "temp",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "(start only) If true, the uploaded file is\n  expected to be temporary"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "blob": {},
                                    "mimetype": {
                                        "$ref": "#/components/schemas/mimetype"
                                    },
                                    "filename": {
                                        "type": "string",
                                        "description": "(start only) Name of uploaded file"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "token"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "token": {
                                            "$ref": "#/components/schemas/upload_token"
                                        },
                                        "dt": {
                                            "$ref": "#/components/schemas/document_type"
                                        },
                                        "filename": {
                                            "type": "string"
                                        },
                                        "mimetype": {
                                            "$ref": "#/components/schemas/mimetype"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "ranges": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/offset_range"
                                            }
                                        },
                                        "hash": {
                                            "type": "string"
                                        },
                                        "crc32": {
                                            "type": "string"
                                        },
                                        "progress_value": {
                                            "type": "integer"
                                        },
                                        "progress_max": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "summary": "Fetch search results",
                "description": "Return IDs, and optionally other display fields, of submissions that match a\nsearch.\n\nPass the search query in the `q` parameter. The list of matching submission\nIDs is returned in the `ids` response property, ordered according to the\nsearch.\n\nThe `t`, `qt`, `reviewer`, `sort`, and `scoresort` parameters can also affect\nthe search. `t` defines the collection of submissions to search, where\n`t=viewable` checks all submissions the user can view. If `t` is not provided,\nHotCRP picks a default based on the user’s roles and the site’s current\nconfiguration; for PC members and chairs, the typical default is `t=s`, which\nsearches complete submissions.\n\n### Display fields\n\nPass `f` and `format` parameters to retrieve display fields for each submission\nin the search result.\n\n`f` defines the display fields to return. An example is `title authors[full]`.\nObtain the available display fields with the `/displayfields` API. `format` is\neither `csv` or `html`, and requests CSV or HTML format for the response data.\n\nThe response will contain `fields` and `papers` properties. `fields` is an array\nof objects defining the emitted display fields. Typically, each entry in\n`fields` corresponds to a member of `f`, but some field requests can expand into\nmultiple display fields. `papers` is an array of objects defining the exported\nfields for each matching submission. Each `papers` entry has a `pid` property\nwith the submission ID, and properties corresponding to the `fields`. The\n`papers` entries are in the same order as `ids`. In some cases, the response\nwill have a `statistics` property defining overall statistics for some of the\nrequested fields.\n\nAs an example, this response might be returned for the search `10-12` with\n`format=csv` and `f=title`.\n\n```json\n{\n    \"ok\": true,\n    \"ids\": [10, 12],\n    \"fields\": [\n        {\n            \"name\": \"title\",\n            \"title\": \"Title\",\n            \"order\": 120,\n            \"sort\": \"ascending\"\n        }\n    ],\n    \"groups\": [],\n    \"papers\": [\n        {\n            \"pid\": 10,\n            \"title\": \"Active Bridging\"\n        },\n        {\n            \"pid\": 12,\n            \"title\": \"Dynamics of Random Early Detection\"\n        }\n    ]\n}\n```\n\nPlease note that `html` format is unlikely to be useful outside the HotCRP web\napplication. The returned HTML uses elements, tag structures, and class names\nsuitable for HotCRP’s internal use, and may change at any time. Furthermore,\nin some cases (such as `f=allpref`), the returned data is compressed into a\nfield-specific format that the HotCRP web application expands.\n\n### Search annotations\n\nThe `groups` response property is an array of search annotations, and is\nreturned for `THEN` searches, `LEGEND` searches, and searches on annotated\ntags. Each `groups` entry contains a position `pos`, which is an integer index\ninto the search results. Annotations with `pos` `P` should appear immediately\nbefore the submission at index `P` in the result. A `groups` entry may also\nhave other properties, including `legend` (the textual legend corresponding to\nthe annotation), `search` (for `THEN` searches, the search string representing\nthe following results), and `annoid`.\n\nAs an example, this response might be returned for the search `10-12 THEN\n5-8`.\n\n```json\n{\n    \"ok\": true,\n    \"ids\": [10, 12, 8],\n    \"groups\": [\n        {\n            \"pos\": 0,\n            \"legend\": \"10-12\",\n            \"search\": \"10-12\"\n        },\n        {\n            \"pos\": 2,\n            \"legend\": \"5-8\",\n            \"search\": \"5-8\"\n        }\n    ]\n}\n```\n\n### More\n\nThe `search_params` response property is a URL-encoded string defining all\nrelevant parameters for the search.\n\nSet the `hotlist` parameter to get a `hotlist` response property, which is\nused by the HotCRP browser Javascript to remember information about a list of\npapers.\n\n",
                "tags": [
                    "Search"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/q"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Space-separated field definitions"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/search_field_format"
                        },
                        "description": "Format for returned submission fields (`f`)"
                    },
                    {
                        "$ref": "#/components/parameters/qt"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    },
                    {
                        "$ref": "#/components/parameters/scoresort"
                    },
                    {
                        "$ref": "#/components/parameters/reviewer"
                    },
                    {
                        "name": "report",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Report defining default view options"
                    },
                    {
                        "name": "warn_missing",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Get warnings for missing submissions"
                    },
                    {
                        "name": "hotlist",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Get a `hotlist` response property"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "session",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/minimal_response"
                                        },
                                        {
                                            "$ref": "#/components/schemas/search_response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "fields": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "papers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "statistics": {}
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/searchactions": {
            "get": {
                "summary": "List search actions",
                "description": "Return a list of search actions accessible via HotCRP’s API.\n\nSearch actions perform actions on a set of papers specified via search. In the\nHotCRP web application, search actions are shown underneath the search list;\nexamples include “Download > Review forms (zip)” and “Tag > Add to order”. The\n`/searchactions` API endpoint retrieves the search actions that the current user\ncan access programmatically via the `/searchaction` API.\n",
                "tags": [
                    "Search"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "actions"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "actions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/search_action"
                                            },
                                            "description": "List of available actions"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/searchaction": {
            "get": {
                "summary": "Perform search action",
                "description": "Perform the search action specified by the `action` parameter on the papers\ndefined by the `q` and `t` search parameters.\n\nThe `action` parameter must correspond to the `name` of a valid search action,\nas returned from the `/searchactions` API endpoint. Other parameters may be\nprovided; the `/searchactions` response mentions relevant parameters for each\naction.\n\nSearch action responses do not follow HotCRP’s typical conventions. Successful\nresponses may not use the JSON content type. For instance, the `get/paper`\naction typically returns a ZIP file containing submission PDFs, and the\n`get/csv` action returns a CSV-formatted text file. Furthermore, successful JSON\nresponses may not be objects, or may not contain an `ok` property; for example,\na successful response to a `get/json` request is an array of objects.\nApplications wanting predictable JSON responses should use other API endpoints.\nNevertheless, `/searchaction` can be more convenient than using more\nstandardized APIs.\n",
                "tags": [
                    "Search"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name of action"
                    },
                    {
                        "$ref": "#/components/parameters/q"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/qt"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    },
                    {
                        "name": "report",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "$ref": "#/components/parameters/scoresort"
                    },
                    {
                        "$ref": "#/components/parameters/reviewer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Perform search action",
                "description": "Perform the search action specified by the `action` parameter on the papers\ndefined by the `q` and `t` search parameters.\n\nThe request format for POST requests is the same as for GET requests.\n",
                "tags": [
                    "Search"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name of action"
                    },
                    {
                        "$ref": "#/components/parameters/q"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/qt"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    },
                    {
                        "name": "report",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "$ref": "#/components/parameters/scoresort"
                    },
                    {
                        "$ref": "#/components/parameters/reviewer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/displayfields": {
            "get": {
                "summary": "List display fields",
                "description": "Return a list of all supported display fields. Display fields can be requested\nin the web UI (search for `show:FIELDNAME`) or in the API (supply `f=FIELDNAME`\nto the `/search` endpoint).\n",
                "tags": [
                    "Search"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "fields"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "fields": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/display_field"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/graphdata": {
            "get": {
                "tags": [
                    "Search"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/namedsearch": {
            "get": {
                "tags": [
                    "Search"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "searches"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "searches": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Search"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "searches"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "searches": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/searchcompletion": {
            "get": {
                "tags": [
                    "Search"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "searchcompletion"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "searchcompletion": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/viewoptions": {
            "get": {
                "tags": [
                    "Search"
                ],
                "parameters": [
                    {
                        "name": "report",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "$ref": "#/components/parameters/q.opt"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "report",
                                        "display_current",
                                        "display_default",
                                        "display_difference",
                                        "display_default_message_list"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "report": {},
                                        "display_current": {},
                                        "display_default": {},
                                        "display_difference": {},
                                        "display_default_message_list": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Search"
                ],
                "parameters": [
                    {
                        "name": "report",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "$ref": "#/components/parameters/q.opt"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "display"
                                ],
                                "properties": {
                                    "display": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "report",
                                        "display_current",
                                        "display_default",
                                        "display_difference",
                                        "display_default_message_list"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "report": {},
                                        "display_current": {},
                                        "display_default": {},
                                        "display_difference": {},
                                        "display_default_message_list": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/tags": {
            "get": {
                "summary": "Retrieve submission tags",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/minimal_response"
                                        },
                                        {
                                            "$ref": "#/components/schemas/tag_response"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Change submission tags",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tags": {},
                                    "addtags": {},
                                    "deltags": {},
                                    "search": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/minimal_response"
                                        },
                                        {
                                            "$ref": "#/components/schemas/tag_response"
                                        },
                                        {
                                            "$ref": "#/components/schemas/search_response"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/alltags": {
            "get": {
                "summary": "Retrieve all visible tags",
                "tags": [
                    "Tags"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "tags"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "tags": {
                                            "$ref": "#/components/schemas/tag_list"
                                        },
                                        "readonly_tagmap": {},
                                        "sitewide_tagmap": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assigntags": {
            "post": {
                "summary": "Change several tags",
                "tags": [
                    "Tags"
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "tagassignment"
                                ],
                                "properties": {
                                    "tagassignment": {
                                        "type": "string",
                                        "description": "Comma-separated list of paper IDs and tag assignments"
                                    },
                                    "search": {
                                        "$ref": "#/components/schemas/search_parameter_specification"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/minimal_response"
                                        },
                                        {
                                            "$ref": "#/components/schemas/search_response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "p": {}
                                            },
                                            "required": [
                                                "p"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taganno": {
            "get": {
                "summary": "Retrieve tag annotations",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/tag"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/search_parameter_specification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/minimal_response"
                                        },
                                        {
                                            "$ref": "#/components/schemas/search_response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "tag": {
                                                    "$ref": "#/components/schemas/tag"
                                                },
                                                "editable": {
                                                    "type": "boolean"
                                                },
                                                "anno": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/tag_annotation"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "tag",
                                                "editable",
                                                "anno"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Change tag annotations",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "query",
                        "required": true,
                        "schema": {}
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "anno"
                                ],
                                "properties": {
                                    "anno": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/tag_annotation"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/minimal_response"
                                        },
                                        {
                                            "$ref": "#/components/schemas/search_response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "tag": {
                                                    "$ref": "#/components/schemas/tag"
                                                },
                                                "editable": {
                                                    "type": "boolean"
                                                },
                                                "anno": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/tag_annotation"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "tag",
                                                "editable",
                                                "anno"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/tagmessages": {
            "get": {
                "summary": "Retrieve tag edit messages",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "pid"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "pid": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/votereport": {
            "get": {
                "summary": "Retrieve vote analysis",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "vote_report"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "vote_report": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/revpref": {
            "get": {
                "tags": [
                    "Review preferences"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "name": "u",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "value",
                                        "pref"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "value": {},
                                        "pref": {},
                                        "prefexp": {},
                                        "topic_score": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Review preferences"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "name": "u",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "pref"
                                ],
                                "properties": {
                                    "pref": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "value",
                                        "pref"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "value": {},
                                        "pref": {},
                                        "prefexp": {},
                                        "topic_score": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assign": {
            "post": {
                "summary": "Perform assignments",
                "description": "Perform assignments, specified either as a JSON array or as an uploaded CSV\nfile.\n\nThe assignments should be compatible with HotCRP’s bulk assignments format.\nThey may be specified:\n\n1. As a JSON request body (when the request body has content-type\n   `application/json`).\n2. As a CSV file (when the request body has content-type\n   `text/csv`).\n3. As a JSON- or CSV-formatted request parameter named `assignments` (when the\n   request body has content-type `application/x-www-form-urlencoded` or\n   `multipart/form-data`).\n4. As a previously-uploaded JSON or CSV file, represented by a upload token in\n   the `upload` parameter.\n\nJSON assignments should parse to arrays of objects. Each object should contain\nat least a `pid` property and an `action` property, where `action` determines\nwhat kind of assignment to run. CSV assignments must contain a header, which\nshould specify at least `pid` and `action` columns. (The `/assigners` endpoint\nlists the available `action`s.)\n\nTo test an assignment, supply a `dry_run=1` parameter. This will parse the\nuploaded assignment and report any errors, but make no changes to the\ndatabase.\n\nThe `valid` response property is `true` if and only if the assignments were\nvalid (had no errors). In non-dry-run requests, `\"valid\": true` indicates that\nany database changes were committed.\n\nThe response includes an `output` property, which is an array of the specific\nassignments performed (or, for dry-run requests, the specific assignments that\n*would have been* performed). Each entry represents a single action applied to a\nsingle submission. (This differs from input `assignments` entries, each of which\nmight apply to many submissions.) If you’re not interested in the `output`\nproperty, supply either `summary=1` (to get summary `assigned_actions` and\n`assigned_pids` properties) or `quiet=1` (to get nothing).\n\nIf the optional `p` request parameter is set, HotCRP will only implement\nassignments that affect that submission.\n\n",
                "tags": [
                    "Assignments"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    },
                    {
                        "name": "dry_run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True checks input for errors, but does not save changes"
                    },
                    {
                        "name": "upload",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/upload_token"
                        },
                        "description": "Upload token for JSON or CSV assignments"
                    },
                    {
                        "name": "quiet",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True omits assignment information from response"
                    },
                    {
                        "name": "summary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True omits complete assignment from response"
                    },
                    {
                        "name": "csv",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True uses CSV format in response"
                    },
                    {
                        "name": "forceShow",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Explicit false means chair conflicts are not overridden"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/search_parameter_specification"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "assignments": {
                                        "type": "string",
                                        "description": "JSON or CSV assignments"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "valid"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "dry_run": {
                                            "type": "boolean",
                                            "description": "True if request was a dry run"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "description": "True if the assignments were valid"
                                        },
                                        "assigned_actions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "List of action names included in eventual assignment"
                                        },
                                        "assigned_pids": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/pid"
                                            },
                                            "description": "List of submission IDs changed by assignment"
                                        },
                                        "output": {
                                            "description": "Resulting assignments, as JSON list or CSV"
                                        },
                                        "output_header": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "CSV header if `output` is JSON"
                                        },
                                        "papers": {},
                                        "ids": {},
                                        "groups": {},
                                        "search_params": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assigners": {
            "get": {
                "summary": "List assignment actions",
                "description": "List all assignment actions understood by this HotCRP, including their\nparameters.\n",
                "tags": [
                    "Assignments"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "assigners"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "assigners": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/assignment_action"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/autoassign": {
            "post": {
                "summary": "Compute automatic assignment",
                "description": "Compute and optionally perform an automatic assignment.\n\nSpecify the autoassignment action with the `autoassigner` parameter, and the\nsubmissions to assign with the `q` parameter. (The `/autoassigners` endpoint\nlists the available autoassignment actions.)\n\nMost autoassignment actions take additional parameters and a set of PC members\nto assign. Supply these in the `u`, `disjoint`, and `param` parameters. `u`\ndefines the assignable PC members; `disjoint` defines the classes of PC\nmembers that should not be co-assigned; and `param` defines additional\nautoassigner parameters, such as the number of assignments to make or the type\nof review to create.\n\nThe `u`, `disjoint`, and `param` parameters may be supplied multiple times,\neither as a single JSON-formatted array string named `PNAME` or as multiple\nstrings named `PNAME[]`. For instance, `/autoassign?u=%5B1,2%5D` and\n`/autoassign?u%5B%5D=1&u%5B%5D=2` each supply two `u` arguments, `1` and `2`.\n\nEach `u` argument is a search string defining a set of users. Valid strings\nare user IDs (`1`), emails (`kohler@g.harvard.edu`), or tags (`#heavy`).\nPrefix a string with a hyphen `-` to remove matching users from the assignable\nset.\n\nEach `disjoint` argument is a comma-separated list of users that should not be\ncoassigned. Again, users can be defined using IDs, emails, or tags.\n\nEach `param` argument defines a parameter for the autoassignment action, and\nshould be a string with the format `NAME=VALUE`. The parameters required or\nunderstood by each action are listed by the `/autoassigners` endpoint.\n\nTo test an assignment, supply the `dry_run=1` parameter. This will create an\nassignment and test it, reporting any errors, but will make no changes to the\ndatabase. Supply `minimal_dry_run=1` to obtain the autoassignment output\nwithout additional testing. For instance, `dry_run=1` will report warnings for\npotential conflicts, but `minimal_dry_run=1` will not.\n\nAutoassignment is often time consuming, so a successful `/autoassign` may\nreturn early, before the autoassignment completes. The response will list a\njob ID for the autoassigner. Query the `/job` endpoint to monitor the job and\nobtain its eventual output.\n",
                "tags": [
                    "Assignments"
                ],
                "parameters": [
                    {
                        "name": "autoassigner",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name of autoassignment action to run"
                    },
                    {
                        "$ref": "#/components/parameters/q"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "name": "dry_run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True computes the assignment, but does not perform it"
                    },
                    {
                        "name": "minimal_dry_run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True computes an initial assignment, but does not validate it"
                    },
                    {
                        "name": "u",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Array of users to consider for assignment"
                    },
                    {
                        "name": "disjoint",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Array of user sets that should not be coassigned"
                    },
                    {
                        "name": "param",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Array of `NAME=VALUE` autoassignment parameter settings"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "dry_run": {
                                            "type": "boolean",
                                            "description": "True if request was a dry run"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/job_id",
                                            "description": "Job ID of autoassignment job"
                                        },
                                        "job_url": {
                                            "type": "string",
                                            "description": "URL to monitor autoassignment job"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "exit_status": {
                                            "type": "integer"
                                        },
                                        "progress": {
                                            "type": "string"
                                        },
                                        "assigned_pids": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        },
                                        "output": {
                                            "type": "string",
                                            "description": "CSV of computed assignment"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/autoassigners": {
            "get": {
                "summary": "List autoassignment actions",
                "description": "List all autoassignment actions understood by this HotCRP, including their\nparameters.\n",
                "tags": [
                    "Assignments"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "autoassigners"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "autoassigners": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/autoassignment_action"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/decision": {
            "get": {
                "summary": "Fetch submission decision",
                "tags": [
                    "Submission administration"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "decision",
                                        "decision_html"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "decision": {},
                                        "decision_html": {},
                                        "editable": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Change submission decision",
                "tags": [
                    "Submission administration"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "decision"
                                ],
                                "properties": {
                                    "decision": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "decision",
                                        "decision_html"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "decision": {},
                                        "decision_html": {},
                                        "editable": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/lead": {
            "get": {
                "summary": "Fetch submission discussion lead",
                "tags": [
                    "Submission administration"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "lead",
                                        "lead_html"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "lead": {},
                                        "lead_html": {},
                                        "color_classes": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Change submission discussion lead",
                "tags": [
                    "Submission administration"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "lead"
                                ],
                                "properties": {
                                    "lead": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "lead",
                                        "lead_html"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "lead": {},
                                        "lead_html": {},
                                        "color_classes": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/manager": {
            "get": {
                "summary": "Fetch submission administrator",
                "tags": [
                    "Submission administration"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "manager",
                                        "manager_html"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "manager": {},
                                        "manager_html": {},
                                        "color_classes": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Change submission administrator",
                "tags": [
                    "Submission administration"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "manager"
                                ],
                                "properties": {
                                    "manager": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "manager",
                                        "manager_html"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "manager": {},
                                        "manager_html": {},
                                        "color_classes": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/reviewround": {
            "post": {
                "summary": "Change review round",
                "tags": [
                    "Submission administration"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/shepherd": {
            "get": {
                "summary": "Fetch submission shepherd",
                "tags": [
                    "Submission administration"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "shepherd",
                                        "shepherd_html"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "shepherd": {},
                                        "shepherd_html": {},
                                        "color_classes": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Change submission shepherd",
                "tags": [
                    "Submission administration"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "shepherd"
                                ],
                                "properties": {
                                    "shepherd": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "shepherd",
                                        "shepherd_html"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "shepherd": {},
                                        "shepherd_html": {},
                                        "color_classes": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/review": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/review": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/reviewhistory": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/acceptreview": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "$ref": "#/components/parameters/r"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "action",
                                        "review_site_relative"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "action": {},
                                        "review_site_relative": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/claimreview": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "$ref": "#/components/parameters/r"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "action",
                                        "review_site_relative"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "action": {},
                                        "review_site_relative": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/declinereview": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "$ref": "#/components/parameters/r"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "reason": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "action",
                                        "review_site_relative"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "action": {},
                                        "reason": {},
                                        "review_site_relative": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/requestreview": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "name": "round",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {},
                                    "given_name": {},
                                    "family_name": {},
                                    "name": {},
                                    "affiliation": {},
                                    "override": {},
                                    "reason": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/reviewrating": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "$ref": "#/components/parameters/r"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "ratings": {},
                                        "user_rating": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "$ref": "#/components/parameters/r"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "user_rating"
                                ],
                                "properties": {
                                    "user_rating": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "ratings": {},
                                        "user_rating": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reviewtoken": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/comment": {
            "get": {
                "summary": "Retrieve comment",
                "description": "Return a comment object specified by ID.\n\nThe `c` parameter specifies the comment to return. If the comment exists and\nthe user can view it, it will be returned in the `comment` component of the\nresponse. Otherwise, an error response is returned.\n\nIf `c` is omitted, all viewable comments are returned in a `comments` list.\n",
                "tags": [
                    "Comments"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "False omits comment content from response"
                    },
                    {
                        "$ref": "#/components/parameters/c.opt"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "comment": {
                                            "$ref": "#/components/schemas/comment"
                                        },
                                        "comments": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create, modify, or delete comment",
                "description": "Create, modify, or delete a comment specified by ID.\n\nThe `c` parameter specifies the comment to modify. It can be a numeric comment\nID; `new`, to create a new comment; or `response` (or a compound like\n`R2response`), to create or modify a named response.\n\nSetting `delete=1` deletes the specified comment, and the response does not\ncontain a `comment` component. Otherwise the comment is created or modified,\nand the response `comment` component contains the new comment.\n\nComment attachments may be uploaded as files (requiring a request body in\n`multipart/form-data` encoding), or using the [upload API](#operation/upload).\nTo upload a single new attachment:\n\n* Set the `attachment:1` body parameter to `new`\n* Either:\n\t* Set `attachment:1:file` as a uploaded file containing the relevant data\n\t* Or use the [upload API](#operation/upload) to upload the file,\n\t  and supply the upload token in the `attachment:1:upload` body parameter\n\nTo upload multiple attachments, number them sequentially (`attachment:2`,\n`attachment:3`, and so forth). To delete an existing attachment, supply its\n`docid` as an `attachment:N` parameter, and set `attachment:N:delete` to 1.\n",
                "tags": [
                    "Comments"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "name": "override",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "delete",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "text": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "string"
                                    },
                                    "topic": {
                                        "$ref": "#/components/schemas/comment_topic"
                                    },
                                    "visibility": {
                                        "$ref": "#/components/schemas/comment_visibility"
                                    },
                                    "response": {
                                        "type": "string"
                                    },
                                    "ready": {
                                        "type": "boolean"
                                    },
                                    "draft": {
                                        "type": "boolean"
                                    },
                                    "blind": {
                                        "type": "boolean"
                                    },
                                    "by_author": {
                                        "type": "boolean"
                                    },
                                    "review_token": {
                                        "type": "string"
                                    },
                                    "attachment": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "comment": {
                                            "$ref": "#/components/schemas/comment"
                                        },
                                        "conflict": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mentioncompletion": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "mentioncompletion"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "mentioncompletion": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/track": {
            "post": {
                "tags": [
                    "Meeting tracker"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    },
                    {
                        "name": "track",
                        "in": "query",
                        "required": true,
                        "schema": {}
                    },
                    {
                        "name": "tracker_start_at",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hotlist-info": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trackerstatus": {
            "get": {
                "tags": [
                    "Meeting tracker"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trackerconfig": {
            "post": {
                "tags": [
                    "Meeting tracker"
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "stopall": {},
                                    "tr": {},
                                    "has_tr": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "tracker_status_at",
                                        "tracker_eventid"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "tracker": {},
                                        "tracker_recent": {},
                                        "tracker_status": {},
                                        "now": {},
                                        "tracker_status_at": {},
                                        "tracker_eventid": {},
                                        "new_trackerid": {},
                                        "tracker_site": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {}
                    },
                    {
                        "name": "potential_conflict",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "match"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "match": {},
                                        "email": {},
                                        "given_name": {},
                                        "family_name": {},
                                        "affiliation": {},
                                        "potential_conflict": {},
                                        "orcid": {},
                                        "country": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pc": {
            "get": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "ui",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "pc"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "pc": {},
                                        "tags": {},
                                        "sort": {},
                                        "p": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/clickthrough": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "clickthrough_id",
                                    "clickthrough_type",
                                    "clickthrough_time"
                                ],
                                "properties": {
                                    "accept": {},
                                    "clickthrough_id": {},
                                    "clickthrough_type": {},
                                    "clickthrough_time": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/whoami": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "email": {},
                                        "given_name": {},
                                        "family_name": {},
                                        "affiliation": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "from",
                                        "to",
                                        "rows",
                                        "more"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "from": {},
                                        "to": {},
                                        "rows": {},
                                        "more": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{p}/follow": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.path"
                    },
                    {
                        "name": "u",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "following"
                                ],
                                "properties": {
                                    "following": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "following"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "following": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/job": {
            "get": {
                "summary": "Monitor job",
                "description": "Some HotCRP tasks, such as autoassignment, can take too long for a single API\nrequest. Such tasks start a *job* and return its unique identifier. The `/job`\nendpoint monitors the job’s progress and can return its output upon\ncompletion.\n\nThe listed response properties are common to all job types, but specific jobs\nmay return other response properties. For example, a running autoassignment\njob will return a string `progress` property that describes the current phase\nof autoassignment, and a completed autoassignment job will report\n`assigned_pids` and `incomplete_pids` properties.\n",
                "tags": [
                    "Task management"
                ],
                "parameters": [
                    {
                        "name": "job",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/job_id"
                        }
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True to return job output"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "status",
                                        "update_at"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "`\"wait\"` if the job has not started, `\"run\"` if it is running, `\"done\"` if it is complete, `\"fail\"` if it failed"
                                        },
                                        "update_at": {
                                            "type": "integer",
                                            "description": "UNIX time that job was last updated (if this time is far in the past, the job likely crashed)"
                                        },
                                        "output": {
                                            "description": "Job output, either as a JSON object or a UTF-8 string"
                                        },
                                        "output_base64": {
                                            "type": "string",
                                            "description": "Base64-encoded job output (if job output isn’t a UTF-8 string)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mailtext": {
            "get": {
                "tags": [
                    "Site information"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/p.opt"
                    },
                    {
                        "name": "template",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "$ref": "#/components/parameters/r.opt"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "given_name",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "family_name",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "affiliation",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "reason",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "subject",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "body",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "templates": {},
                                        "subject": {},
                                        "body": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account": {
            "get": {
                "tags": [
                    "Site administration"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "email",
                                        "disabled",
                                        "placeholder"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "email": {},
                                        "disabled": {},
                                        "placeholder": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Site administration"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {}
                    },
                    {
                        "name": "disable",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "enable",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    },
                    {
                        "name": "sendinfo",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "email",
                                        "disabled",
                                        "placeholder"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "email": {},
                                        "disabled": {},
                                        "placeholder": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/namedformula": {
            "get": {
                "tags": [
                    "Site administration"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "formulas"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "formulas": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Site administration"
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "formula"
                                ],
                                "properties": {
                                    "formula": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "formulas"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "formulas": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "summary": "Fetch site settings",
                "description": "This endpoint returns a JSON object defining all site settings. The result can\nbe used to examine settings offline, change settings otherwise unavailable\nthrough the settings UI, or transfer settings to another site.\n\nThe `filter` and `exclude` parameters can filter the returned settings to a\nsubset. For example, when exporting one site’s settings for use by another, you\nmight set `exclude` to `#id OR #deadline`; this excludes settings relevant to a\nconference’s identity (`conference_name`, `site_contact_email`, etc.) or\ndeadlines.\n",
                "tags": [
                    "Settings"
                ],
                "x-badges": [
                    {
                        "name": "Admin only"
                    }
                ],
                "parameters": [
                    {
                        "name": "reset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search expression defining settings to include"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search expression defining settings to exclude"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "settings"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "settings": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Modify site settings",
                "description": "This endpoint modifies site settings according to a JSON object. This object may\ndefine a full complement of settings or a subset. It may be provided as a\nrequest body with type `application/json`, or as a body parameter with name\n`settings`.\n\nThe `filter` and `exclude` parameters can filter the modifications that are\napplied; for example, uploading a settings object with `filter` set to `#rf`\nwill only change settings relevant to the review form.\n\nFor more information on JSON settings, see [Help > Advanced settings](https://help.hotcrp.com/help/jsonsettings).\n",
                "tags": [
                    "Settings"
                ],
                "x-badges": [
                    {
                        "name": "Admin only"
                    }
                ],
                "parameters": [
                    {
                        "name": "dry_run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "True checks input for errors, but does not save changes"
                    },
                    {
                        "name": "reset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search expression defining settings to include"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search expression defining settings to exclude"
                    },
                    {
                        "name": "filename",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "File name for `settings` object (for error messages)"
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "settings": {
                                        "type": "object",
                                        "description": "Settings to change"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "valid",
                                        "change_list",
                                        "settings"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "dry_run": {
                                            "type": "boolean",
                                            "description": "True for dry-run requests"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "description": "True if the modification was valid"
                                        },
                                        "change_list": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "List of modified top-level settings"
                                        },
                                        "settings": {
                                            "type": "object",
                                            "description": "New settings"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reviewfieldlibrary": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "samples",
                                        "types"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "samples": {},
                                        "types": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settingdescriptions": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "setting_descriptions"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "setting_descriptions": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/submissionfieldlibrary": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "samples",
                                        "types"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "samples": {},
                                        "types": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cspreport": {
            "post": {
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jserror": {
            "post": {
                "tags": [
                    "Session"
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "error"
                                ],
                                "properties": {
                                    "error": {},
                                    "url": {},
                                    "lineno": {},
                                    "colno": {},
                                    "stack": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauthtoken": {
            "post": {
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reauth": {
            "post": {
                "tags": [
                    "Session"
                ],
                "parameters": [
                    {
                        "name": "confirm",
                        "in": "query",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "reason": {},
                                    "email": {},
                                    "password": {},
                                    "totpcode": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session": {
            "get": {
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "sessioninfo"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "sessioninfo": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Session"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "sessioninfo"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "sessioninfo": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stashmessages": {
            "post": {
                "tags": [
                    "Session"
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "message_list"
                                ],
                                "properties": {
                                    "message_list": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok",
                                        "smsg"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        },
                                        "smsg": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "required": [
                                        "ok"
                                    ],
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "message_list": {
                                            "$ref": "#/components/schemas/message_list"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_response"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "redirect": {
                "name": "redirect",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "p.path": {
                "name": "p",
                "in": "path",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/pid"
                }
            },
            "p": {
                "name": "p",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/pid"
                }
            },
            "r": {
                "name": "r",
                "in": "query",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/rid"
                }
            },
            "p.opt": {
                "name": "p",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/pid"
                }
            },
            "r.opt": {
                "name": "r",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/rid"
                }
            },
            "c.opt": {
                "name": "c",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/cid"
                }
            },
            "c": {
                "name": "c",
                "in": "query",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/cid"
                }
            },
            "q": {
                "name": "q",
                "in": "query",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/search_string"
                }
            },
            "q.opt": {
                "name": "q",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/search_string"
                }
            },
            "t": {
                "name": "t",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/search_collection"
                }
            },
            "qt": {
                "name": "qt",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/search_qt"
                }
            },
            "reviewer": {
                "name": "reviewer",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/search_reviewer"
                }
            },
            "sort": {
                "name": "sort",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/search_sort"
                }
            },
            "scoresort": {
                "name": "scoresort",
                "in": "query",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/search_scoresort"
                }
            },
            "forceShow": {
                "name": "forceShow",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            }
        },
        "schemas": {
            "message": {
                "type": "object",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "integer",
                        "minimum": -5,
                        "maximum": 3
                    },
                    "field": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "context": {
                        "$ref": "#/components/schemas/message_context"
                    },
                    "pos1": {
                        "title": "start position",
                        "type": "integer"
                    },
                    "pos2": {
                        "title": "end position",
                        "type": "integer"
                    }
                },
                "examples": [
                    {
                        "status": 0,
                        "message": "<0>Helpful message"
                    },
                    {
                        "status": 2,
                        "field": "abstract",
                        "message": "<0>Entry required to complete submission"
                    }
                ]
            },
            "message_list": {
                "type": "array",
                "description": "Diagnostic list",
                "items": {
                    "$ref": "#/components/schemas/message"
                },
                "examples": [
                    [],
                    [
                        {
                            "status": 2,
                            "message": "<0>Function not found"
                        }
                    ]
                ]
            },
            "message_context": {
                "type": "array",
                "prefixItems": [
                    {
                        "title": "substring",
                        "type": "string"
                    },
                    {
                        "title": "start position",
                        "type": "integer"
                    },
                    {
                        "title": "end position",
                        "type": "integer"
                    }
                ]
            },
            "minimal_response": {
                "type": "object",
                "required": [
                    "ok"
                ],
                "properties": {
                    "ok": {
                        "type": "boolean"
                    },
                    "message_list": {
                        "$ref": "#/components/schemas/message_list"
                    }
                }
            },
            "error_response": {
                "type": "object",
                "required": [
                    "ok"
                ],
                "properties": {
                    "ok": {
                        "type": "boolean",
                        "description": "always false"
                    },
                    "message_list": {
                        "$ref": "#/components/schemas/message_list"
                    },
                    "status_code": {
                        "type": "integer"
                    }
                }
            },
            "pid": {
                "type": "integer",
                "description": "Submission ID",
                "minimum": 1
            },
            "mimetype": {
                "type": "string",
                "description": "MIME type",
                "examples": [
                    "application/pdf",
                    "image/png"
                ]
            },
            "job_id": {
                "type": "string",
                "description": "Job ID",
                "examples": [
                    "hcj_PHkMnDMRkMuBydyCSBQCymPTqaqmsGWaftV"
                ]
            },
            "paper_status": {
                "type": "string",
                "description": "Submission status",
                "examples": [
                    "draft",
                    "submitted",
                    "withdrawn"
                ]
            },
            "rid": {
                "oneOf": [
                    {
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "type": "string"
                    }
                ],
                "description": "Review ID"
            },
            "cid": {
                "oneOf": [
                    {
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "type": "string",
                        "examples": [
                            "new",
                            "response",
                            "R2response"
                        ]
                    }
                ],
                "description": "Comment ID"
            },
            "document_name": {
                "type": "string",
                "examples": [
                    "testconf-paper1.pdf"
                ]
            },
            "document_type": {
                "type": "integer"
            },
            "document_id": {
                "type": "integer",
                "minimum": 1,
                "description": "Document ID"
            },
            "offset_range": {
                "type": "array",
                "prefixItems": [
                    {
                        "type": "integer",
                        "description": "First offset"
                    },
                    {
                        "type": "integer",
                        "description": "Last offset"
                    }
                ]
            },
            "upload_token": {
                "type": "string",
                "description": "Token for file upload",
                "examples": [
                    "hcupwhvGDVmHNYyDKdqeqA"
                ]
            },
            "hotlist": {
                "type": "object",
                "description": "Properties of submission list or user list",
                "properties": {
                    "listid": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "urlbase": {
                        "type": "string"
                    },
                    "highlight": {
                        "type": "boolean"
                    },
                    "ids": {
                        "$ref": "#/components/schemas/encoded_pid_list"
                    }
                },
                "examples": [
                    {
                        "listid": "p/s/1-40",
                        "description": "1-40 in Submitted",
                        "urlbase": "search?t=s",
                        "ids": "Q3ihaiilFkB"
                    }
                ]
            },
            "hotlist_input": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hotlist"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "digest": {
                                "type": "string"
                            },
                            "curid": {
                                "type": "integer"
                            },
                            "previd": {
                                "type": "integer"
                            },
                            "nextid": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "description": "Properties of submission list or user list"
            },
            "encoded_pid_list": {
                "type": "string",
                "description": "Encoded list of nonnegative submission IDs",
                "examples": [
                    "Q3ihaiilFkB",
                    "1 2 3-10 5"
                ]
            },
            "encoded_search_parameters": {
                "type": "string",
                "description": "URL-encoded search parameters",
                "examples": [
                    "q=&t=s&sort=id&forceShow=&report=pl"
                ]
            },
            "search_string": {
                "type": "string",
                "description": "Search query",
                "examples": [
                    "1-10 OR #ready"
                ]
            },
            "search_collection": {
                "type": "string",
                "description": "Collection to search",
                "examples": [
                    "s",
                    "all"
                ]
            },
            "search_qt": {
                "type": "string",
                "description": "Search fields"
            },
            "search_sort": {
                "type": "string",
                "description": "Sort order",
                "examples": [
                    "id",
                    "-title"
                ]
            },
            "search_scoresort": {
                "type": "string",
                "description": "Sort order for scores",
                "examples": [
                    "counts",
                    "average"
                ]
            },
            "search_reviewer": {
                "type": "string",
                "description": "Email of designated reviewer for search",
                "examples": [
                    "pcmember@uhcrp.edu"
                ]
            },
            "search_parameters": {
                "type": "object",
                "description": "Search parameters",
                "required": [
                    "q"
                ],
                "properties": {
                    "q": {
                        "$ref": "#/components/schemas/search_string"
                    },
                    "t": {
                        "$ref": "#/components/schemas/search_collection"
                    },
                    "qt": {
                        "$ref": "#/components/schemas/search_qt"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/search_sort"
                    },
                    "scoresort": {
                        "$ref": "#/components/schemas/search_scoresort"
                    },
                    "reviewer": {
                        "$ref": "#/components/schemas/search_reviewer"
                    }
                }
            },
            "search_parameter_specification": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/encoded_search_parameters"
                    },
                    {
                        "$ref": "#/components/schemas/search_parameters"
                    }
                ],
                "examples": [
                    "q=",
                    "{\"q\":\"hello\",\"t\":\"all\"}"
                ]
            },
            "search_response": {
                "type": "object",
                "description": "Search result",
                "required": [
                    "ids",
                    "groups",
                    "search_params"
                ],
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/pid"
                        }
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tag_annotation"
                        }
                    },
                    "search_params": {
                        "$ref": "#/components/schemas/encoded_search_parameters"
                    },
                    "hotlist": {
                        "$ref": "#/components/schemas/hotlist"
                    }
                }
            },
            "action_definition": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/view_option"
                        }
                    }
                }
            },
            "display_field": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/action_definition"
                    }
                ],
                "description": "Display field definition",
                "examples": [
                    {
                        "name": "abstract",
                        "description": "<0>Abstract"
                    },
                    {
                        "name": "lead",
                        "description": "<0>Discussion lead",
                        "parameters": [
                            {
                                "name": "format",
                                "type": "enum",
                                "enum": [
                                    "given_name",
                                    "family_name"
                                ],
                                "lifted": true
                            }
                        ]
                    }
                ]
            },
            "view_option": {
                "type": "object",
                "description": "View option definition",
                "required": [
                    "name",
                    "type"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "enum": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lifted": {
                        "type": "boolean"
                    },
                    "min": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "default": {}
                },
                "examples": [
                    {
                        "name": "edit",
                        "type": "bool"
                    },
                    {
                        "name": "format",
                        "type": "enum",
                        "enum": [
                            "given_name",
                            "family_name"
                        ],
                        "lifted": true
                    }
                ]
            },
            "search_action": {
                "type": "object",
                "description": "Search action properties",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/view_option"
                        }
                    },
                    "get": {
                        "type": "boolean"
                    },
                    "post": {
                        "type": "boolean"
                    }
                }
            },
            "search_field_format": {
                "type": "string",
                "enum": [
                    "csv",
                    "html"
                ]
            },
            "update_status": {
                "type": "object",
                "description": "Status of update operation",
                "required": [
                    "valid",
                    "change_list"
                ],
                "properties": {
                    "valid": {
                        "type": "boolean"
                    },
                    "change_list": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pid": {
                        "oneOf": [
                            {
                                "type": "integer",
                                "minimum": 1
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "dry_run": {
                        "type": "boolean"
                    }
                }
            },
            "tag": {
                "type": "string",
                "description": "Tag",
                "pattern": "^~?~?[a-zA-Z@*_:.][-+a-zA-Z0-9?!@*_:.\\/]*$",
                "examples": [
                    "discuss",
                    "For_Evaluation",
                    "~mine"
                ]
            },
            "tag_list": {
                "type": "array",
                "description": "List of tag names",
                "items": {
                    "$ref": "#/components/schemas/tag"
                },
                "examples": [
                    [
                        "discuss",
                        "~mine"
                    ],
                    []
                ]
            },
            "tag_value": {
                "type": "string",
                "description": "Tag with value",
                "pattern": "^~?~?[a-zA-Z@*_:.][-+a-zA-Z0-9?!@*_:.\\/]*#\\d+\\.?\\d*$",
                "examples": [
                    "discuss#0",
                    "For_Evaluation#2.1",
                    "~mine#1"
                ]
            },
            "tag_value_list": {
                "type": "array",
                "description": "List of tag names with values",
                "items": {
                    "$ref": "#/components/schemas/tag_value"
                },
                "examples": [
                    [
                        "discuss#0",
                        "~mine#1"
                    ],
                    []
                ]
            },
            "tag_response": {
                "type": "object",
                "required": [
                    "pid",
                    "tags",
                    "tags_edit_text",
                    "tags_view_html",
                    "tag_decoration_html",
                    "color_classes"
                ],
                "properties": {
                    "pid": {
                        "$ref": "#/components/schemas/pid"
                    },
                    "tags": {
                        "$ref": "#/components/schemas/tag_value_list"
                    },
                    "tags_edit_text": {
                        "type": "string",
                        "description": "Textual representation for editing"
                    },
                    "tags_view_html": {
                        "type": "string",
                        "description": "HTML representation for display"
                    },
                    "tag_decoration_html": {
                        "type": "string",
                        "description": "HTML representation of badges and emoji"
                    },
                    "color_classes": {
                        "$ref": "#/components/schemas/style_classes"
                    },
                    "tags_conflicted": {
                        "$ref": "#/components/schemas/tag_value_list"
                    },
                    "color_classes_conflicted": {
                        "$ref": "#/components/schemas/style_classes"
                    }
                }
            },
            "style_classes": {
                "type": "string",
                "description": "Space-separated list of tag style classes",
                "examples": [
                    "tag-red tagbg",
                    "",
                    "tag-rgb-000000 tag-bold dark tagbg"
                ]
            },
            "tag_annotation": {
                "type": "object",
                "description": "Annotation for tag or submission group",
                "required": [
                    "annoid"
                ],
                "properties": {
                    "pos": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Position of annotation in associated submission list"
                    },
                    "annoid": {
                        "type": "integer"
                    },
                    "tag": {
                        "$ref": "#/components/schemas/tag"
                    },
                    "tagval": {
                        "type": "number"
                    },
                    "blank": {
                        "type": "boolean"
                    },
                    "legend": {
                        "type": "string"
                    }
                }
            },
            "comment_topic": {
                "type": "string",
                "enum": [
                    "paper",
                    "rev",
                    "dec"
                ]
            },
            "comment_visibility": {
                "type": "string",
                "enum": [
                    "admin",
                    "pc",
                    "rev",
                    "au"
                ]
            },
            "assignment_action": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/action_definition"
                    }
                ],
                "description": "Assignment action",
                "examples": [
                    {
                        "name": "review",
                        "description": "<0>Assign review",
                        "parameters": [
                            {
                                "name": "user",
                                "type": "user",
                                "required": true
                            },
                            {
                                "name": "review_type",
                                "type": "rtype",
                                "required": true
                            },
                            {
                                "name": "review_round",
                                "type": "round"
                            }
                        ]
                    },
                    {
                        "name": "submit",
                        "description": "<0>Mark submission as ready for review"
                    }
                ]
            },
            "autoassignment_action": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/action_definition"
                    }
                ],
                "description": "Autoassignment action"
            },
            "paper": {
                "type": "object",
                "required": [
                    "object",
                    "pid",
                    "status"
                ],
                "properties": {
                    "object": {
                        "enum": [
                            "paper"
                        ]
                    },
                    "pid": {
                        "$ref": "#/components/schemas/pid"
                    },
                    "status": {
                        "$ref": "#/components/schemas/paper_status"
                    }
                }
            },
            "comment": {
                "type": "object",
                "required": [
                    "object",
                    "pid",
                    "cid"
                ],
                "properties": {
                    "object": {
                        "enum": [
                            "comment"
                        ]
                    },
                    "pid": {
                        "$ref": "#/components/schemas/pid"
                    },
                    "cid": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "ordinal": {
                        "type": "string"
                    },
                    "editable": {
                        "type": "boolean"
                    },
                    "viewer_owned": {
                        "type": "boolean"
                    },
                    "visibility": {
                        "$ref": "#/components/schemas/comment_visibility"
                    },
                    "topic": {
                        "$ref": "#/components/schemas/comment_topic"
                    },
                    "blind": {
                        "type": "boolean"
                    },
                    "draft": {
                        "type": "boolean"
                    },
                    "collapsed": {
                        "type": "boolean"
                    },
                    "response": {
                        "type": "string"
                    },
                    "author_editable": {
                        "type": "boolean"
                    },
                    "by_author": {
                        "type": "boolean"
                    },
                    "by_shepherd": {
                        "type": "boolean"
                    },
                    "format": {
                        "type": "integer"
                    },
                    "review_token": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "string"
                    },
                    "color_classes": {
                        "$ref": "#/components/schemas/style_classes"
                    },
                    "author": {
                        "type": "string"
                    },
                    "author_email": {
                        "type": "string"
                    },
                    "author_hidden": {
                        "type": "boolean"
                    },
                    "author_pseudonym": {
                        "type": "string"
                    },
                    "author_pseudonymous": {
                        "type": "boolean"
                    },
                    "modified_at": {
                        "type": "integer"
                    },
                    "modified_at_obscured": {
                        "type": "boolean"
                    },
                    "modified_at_text": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "docs": {
                        "type": "array",
                        "items": {}
                    },
                    "word_count": {
                        "type": "integer"
                    }
                },
                "description": "Comment representation"
            }
        },
        "securitySchemes": {
            "apiToken": {
                "type": "http",
                "scheme": "bearer",
                "description": "API token created via Profile > Developer"
            },
            "session": {
                "type": "apiKey",
                "in": "cookie",
                "name": "hotcrpsession",
                "description": "Web sessions use a cookie. The name of the cookie varies by installation; `hotcrpcookie` is used on hotcrp.com. Operations other than GET and HEAD also require a `post` query parameter"
            }
        }
    },
    "tags": [
        {
            "name": "Submissions",
            "description": "These endpoints query and modify HotCRP submissions. They deal with **submission\nobjects**, which are JSON representations of submissions.\n\nEach submission object has an `object` property (set to the constant string\n`\"paper\"`), a `pid` property, and a `status` property. Complete submission\nobjects also have one property per submission field, such as `title`,\n`abstract`, `authors`, `topics`, and `pc_conflicts`. However, methods that fetch\nsubmissions only fill in fields that exist and that the accessing user is\nallowed to see.\n\nSubmission endpoints always return complete submission objects. To select\nspecific properties of submissions, or to fetch computed properties, use the\n`/search` or `/searchaction` endpoints.\n\n\n"
        },
        {
            "name": "Documents"
        },
        {
            "name": "Search",
            "description": "These endpoints perform searches on submissions.\n\n\n"
        },
        {
            "name": "Tags"
        },
        {
            "name": "Review preferences"
        },
        {
            "name": "Assignments",
            "description": "These endpoints perform HotCRP assignments, including review assignments,\nreview preference settings, tags, and anything else that can be modified by\nHotCRP’s bulk assignments interface. `/assign` lets users perform any\nassignment for which they have permission. `/autoassign` lets administrators\ncompute assignments automatically.\n\n\n"
        },
        {
            "name": "Submission administration",
            "description": "These endpoints perform specific kinds of assignment, such as decision,\ndiscussion lead, and shepherd, for one submission at a time. They are provided\nfor the HotCRP web application’s convenience; external users should prefer the\ngeneral-purpose `/assign` endpoint.\n\n\n"
        },
        {
            "name": "Reviews"
        },
        {
            "name": "Comments",
            "description": "These endpoints query and modify submission comments.\n\nEach comment has a *visibility* and a *topic* (which in the UI is called a\n*thread*). These values control who can see the comment.\n\nThe default comment visibility is `\"rev\"`, which makes the comment visible to\nPC and external reviewers. Other values are `\"admin\"` (visible only to\nsubmission administrators and the comment author), `\"pc\"` (visible to PC\nreviewers, but not external reviewers), and `\"au\"` (visible to authors and\nreviewers).\n\nThe default comment topic is `\"rev\"`, the review thread. Comments on the\nreview thread are visible to users who can see reviews; if you can’t see\nreviews, you can’t see the review thread. Other comment topics are `\"paper\"`,\nthe submission thread (visible to anyone who can see the submission), and\n`\"dec\"`, the decision thread (visible to users who can see the submission’s\ndecision).\n\n\n"
        },
        {
            "name": "Meeting tracker"
        },
        {
            "name": "Users"
        },
        {
            "name": "Profile"
        },
        {
            "name": "Notifications"
        },
        {
            "name": "Task management",
            "description": "The `/job` endpoint monitors long-running jobs.\n\n\n"
        },
        {
            "name": "Site information"
        },
        {
            "name": "Site administration"
        },
        {
            "name": "Settings",
            "description": "These endpoints fetch and modify site settings.\n\n\n"
        },
        {
            "name": "Session"
        }
    ],
    "security": [
        {
            "apiToken": []
        },
        {
            "session": []
        }
    ]
}
